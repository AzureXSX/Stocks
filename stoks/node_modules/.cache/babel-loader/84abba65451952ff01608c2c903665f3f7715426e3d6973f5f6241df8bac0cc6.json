{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst util_1 = require(\"util\");\nconst error_1 = require(\"./error\");\nconst common_1 = require(\"./common\");\nconst frame_1 = require(\"./frame\");\nconst protocol_1 = require(\"./protocol\");\n// --- QUIC Public Packet Header\n//\n//      0        1        2        3        4            8\n// +--------+--------+--------+--------+--------+---    ---+\n// | Public |    Connection ID (64)    ...                 | ->\n// |Flags(8)|      (optional)                              |\n// +--------+--------+--------+--------+--------+---    ---+\n//\n//      9       10       11        12\n// +--------+--------+--------+--------+\n// |      QUIC Version (32)            | ->\n// |         (optional)                |\n// +--------+--------+--------+--------+\n//\n//     13       14       15        16      17       18       19       20\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n// |                        Diversification Nonce                          | ->\n// |                              (optional)                               |\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n//\n//     21       22       23        24      25       26       27       28\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n// |                   Diversification Nonce Continued                     | ->\n// |                              (optional)                               |\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n//\n//     29       30       31        32      33       34       35       36\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n// |                   Diversification Nonce Continued                     | ->\n// |                              (optional)                               |\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n//\n//     37       38       39        40      41       42       43       44\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n// |                   Diversification Nonce Continued                     | ->\n// |                              (optional)                               |\n// +--------+--------+--------+--------+--------+--------+--------+--------+\n//\n//     45      46       47        48       49       50\n// +--------+--------+--------+--------+--------+--------+\n// |           Packet Number (8, 16, 32, or 48)          |\n// |                  (variable length)                  |\n// +--------+--------+--------+--------+--------+--------+\n// ---\n//\n// Public Flags:\n// 0x01 = PUBLIC_FLAG_VERSION. Interpretation of this flag depends on whether the packet\n//   is sent by the server or the client. When sent by the client, setting it indicates that\n//   the header contains a QUIC Version (see below)...\n// 0x02 = PUBLIC_FLAG_RESET. Set to indicate that the packet is a Public Reset packet.\n// 0x04 = Indicates the presence of a 32 byte diversification nonce in the header.\n// 0x08 = Indicates the full 8 byte Connection ID is present in the packet.\n// Two bits at 0x30 indicate the number of low-order-bytes of the packet number that\n// are present in each packet. The bits are only used for Frame Packets. For Public Reset\n// and Version Negotiation Packets (sent by the server) which don't have a packet number,\n// these bits are not used and must be set to 0. Within this 2 bit mask:\n//   0x30 indicates that 6 bytes of the packet number is present\n//   0x20 indicates that 4 bytes of the packet number is present\n//   0x10 indicates that 2 bytes of the packet number is present\n//   0x00 indicates that 1 byte of the packet number is present\n// 0x40 is reserved for multipath use.\n// 0x80 is currently unused, and must be set to 0.\nfunction parsePacket(bufv, packetSentBy) {\n  bufv.walk(0); // align start and end\n  const flag = bufv.buf.readUInt8(bufv.start);\n  // 0x80, currently unused\n  if (flag >= 127) {\n    throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n  }\n  // 0x08, connectionID\n  if ((flag & 0b1000) === 0) {\n    throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n  }\n  if ((flag & 0b10) > 0) {\n    // Reset Packet\n    return ResetPacket.fromBuffer(bufv);\n  }\n  const hasVersion = (flag & 0b1) > 0;\n  if (hasVersion && packetSentBy === protocol_1.SessionType.SERVER) {\n    // Negotiation Packet\n    return NegotiationPacket.fromBuffer(bufv);\n  }\n  return RegularPacket.fromBuffer(bufv, flag, packetSentBy);\n}\nexports.parsePacket = parsePacket;\n/** Packet representing a base Packet. */\nclass Packet {\n  static fromBuffer(_bufv, _flag, _packetSentBy) {\n    throw new Error(`class method \"fromBuffer\" is not implemented`);\n  }\n  constructor(connectionID, flag) {\n    this.flag = flag;\n    this.connectionID = connectionID;\n    this.sentTime = 0; // timestamp, ms\n  }\n  isReset() {\n    return this instanceof ResetPacket;\n  }\n  isNegotiation() {\n    return this instanceof NegotiationPacket;\n  }\n  isRegular() {\n    return this instanceof RegularPacket;\n  }\n  valueOf() {\n    return {\n      connectionID: this.connectionID.valueOf(),\n      flag: this.flag\n    };\n  }\n  toString() {\n    return JSON.stringify(this.valueOf());\n  }\n  [util_1.inspect.custom](_depth, _options) {\n    return `<${this.constructor.name} ${this.toString()}>`;\n  }\n}\nexports.Packet = Packet;\n/** ResetPacket representing a reset Packet. */\nclass ResetPacket extends Packet {\n  // --- Public Reset Packet\n  //      0        1        2        3        4         8\n  // +--------+--------+--------+--------+--------+--   --+\n  // | Public |    Connection ID (64)                ...  | ->\n  // |Flags(8)|                                           |\n  // +--------+--------+--------+--------+--------+--   --+\n  //\n  //      9       10       11        12       13      14\n  // +--------+--------+--------+--------+--------+--------+---\n  // |      Quic Tag (32)                |  Tag value map      ... ->\n  // |         (PRST)                    |  (variable length)\n  // +--------+--------+--------+--------+--------+--------+---\n  static fromBuffer(bufv) {\n    bufv.walk(1); // flag\n    const connectionID = protocol_1.ConnectionID.fromBuffer(bufv);\n    const quicTag = protocol_1.QuicTags.fromBuffer(bufv);\n    if (quicTag.name !== protocol_1.Tag.PRST || !quicTag.has(protocol_1.Tag.RNON)) {\n      throw new error_1.QuicError('QUIC_INVALID_PUBLIC_RST_PACKET');\n    }\n    return new ResetPacket(connectionID, quicTag);\n  }\n  constructor(connectionID, tags) {\n    super(connectionID, 0b00001010);\n    this.tags = tags;\n    this.packetNumber = null;\n    this.socketAddress = null;\n    const nonceProof = tags.get(protocol_1.Tag.RNON);\n    if (nonceProof == null) {\n      throw new error_1.QuicError('QUIC_INVALID_PUBLIC_RST_PACKET');\n    }\n    this.nonceProof = nonceProof;\n    const rseq = tags.get(protocol_1.Tag.RSEQ);\n    if (rseq != null) {\n      this.packetNumber = protocol_1.PacketNumber.fromBuffer(new common_1.BufferVisitor(rseq), rseq.length);\n    }\n    const cadr = tags.get(protocol_1.Tag.CADR);\n    if (cadr != null) {\n      this.socketAddress = protocol_1.SocketAddress.fromBuffer(new common_1.BufferVisitor(cadr));\n    }\n  }\n  valueOf() {\n    return {\n      connectionID: this.connectionID.valueOf(),\n      flag: this.flag,\n      packetNumber: this.packetNumber == null ? null : this.packetNumber.valueOf(),\n      socketAddress: this.socketAddress == null ? null : this.socketAddress.valueOf(),\n      nonceProof: this.nonceProof\n    };\n  }\n  byteLen() {\n    return 9 + this.tags.byteLen();\n  }\n  writeTo(bufv) {\n    bufv.walk(1);\n    bufv.buf.writeUInt8(this.flag, bufv.start);\n    this.connectionID.writeTo(bufv);\n    this.tags.writeTo(bufv);\n    return bufv;\n  }\n}\nexports.ResetPacket = ResetPacket;\n/** NegotiationPacket representing a negotiation Packet. */\nclass NegotiationPacket extends Packet {\n  // --- Version Negotiation Packet\n  //      0        1        2        3        4        5        6        7       8\n  // +--------+--------+--------+--------+--------+--------+--------+--------+--------+\n  // | Public |    Connection ID (64)                                                 | ->\n  // |Flags(8)|                                                                       |\n  // +--------+--------+--------+--------+--------+--------+--------+--------+--------+\n  //\n  //      9       10       11        12       13      14       15       16       17\n  // +--------+--------+--------+--------+--------+--------+--------+--------+---...--+\n  // |      1st QUIC version supported   |     2nd QUIC version supported    |   ...\n  // |      by server (32)               |     by server (32)                |\n  // +--------+--------+--------+--------+--------+--------+--------+--------+---...--+\n  static fromConnectionID(connectionID) {\n    return new NegotiationPacket(connectionID, protocol_1.getVersions());\n  }\n  static fromBuffer(bufv) {\n    bufv.walk(1); // flag\n    const connectionID = protocol_1.ConnectionID.fromBuffer(bufv);\n    const versions = [];\n    while (bufv.length > bufv.end) {\n      bufv.walk(4);\n      const version = bufv.buf.toString('utf8', bufv.start, bufv.end);\n      if (!protocol_1.isSupportedVersion(version)) {\n        throw new error_1.QuicError('QUIC_INVALID_VERSION');\n      }\n      versions.push(version);\n    }\n    return new NegotiationPacket(connectionID, versions);\n  }\n  constructor(connectionID, versions) {\n    super(connectionID, 0b00001001);\n    this.versions = versions;\n  }\n  valueOf() {\n    return {\n      connectionID: this.connectionID.valueOf(),\n      flag: this.flag,\n      versions: this.versions\n    };\n  }\n  byteLen() {\n    return 9 + 4 * this.versions.length;\n  }\n  writeTo(bufv) {\n    bufv.walk(1);\n    bufv.buf.writeUInt8(this.flag, bufv.start);\n    this.connectionID.writeTo(bufv);\n    for (const version of this.versions) {\n      bufv.walk(4);\n      bufv.buf.write(version, bufv.start, 4);\n    }\n    return bufv;\n  }\n}\nexports.NegotiationPacket = NegotiationPacket;\n/** RegularPacket representing a regular Packet. */\nclass RegularPacket extends Packet {\n  // --- Frame Packet\n  // +--------+---...---+--------+---...---+\n  // | Type   | Payload | Type   | Payload |\n  // +--------+---...---+--------+---...---+\n  static fromBuffer(bufv, flag, packetSentBy) {\n    bufv.walk(1); // flag\n    const connectionID = protocol_1.ConnectionID.fromBuffer(bufv);\n    let version = '';\n    const hasVersion = (flag & 0b1) > 0;\n    if (hasVersion) {\n      bufv.walk(4);\n      version = bufv.buf.toString('utf8', bufv.start, bufv.end);\n      if (!protocol_1.isSupportedVersion(version)) {\n        throw new error_1.QuicError('QUIC_INVALID_VERSION');\n      }\n    }\n    // Contrary to what the gQUIC wire spec says, the 0x4 bit only indicates the presence of\n    // the diversification nonce for packets sent by the server.\n    // It doesn't have any meaning when sent by the client.\n    let nonce = null;\n    if (packetSentBy === protocol_1.SessionType.SERVER && (flag & 0b100) > 0) {\n      bufv.walk(32);\n      nonce = bufv.buf.slice(bufv.start, bufv.end);\n      if (nonce.length !== 32) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n    }\n    const packetNumber = protocol_1.PacketNumber.fromBuffer(bufv, protocol_1.PacketNumber.flagToByteLen((flag & 0b110000) >> 4));\n    const packet = new RegularPacket(connectionID, packetNumber, nonce);\n    if (version !== '') {\n      packet.setVersion(version);\n    }\n    return packet;\n  }\n  constructor(connectionID, packetNumber, nonce = null) {\n    let flag = 0b00001000;\n    flag |= packetNumber.flagBits() << 4;\n    if (nonce != null) {\n      flag |= 0x04;\n    }\n    super(connectionID, flag);\n    this.packetNumber = packetNumber;\n    this.version = ''; // 4 byte, string\n    this.nonce = nonce; // 32 byte, buffer\n    this.frames = [];\n    this.isRetransmittable = true;\n  }\n  valueOf() {\n    return {\n      connectionID: this.connectionID.valueOf(),\n      flag: this.flag,\n      version: this.version,\n      packetNumber: this.packetNumber.valueOf(),\n      nonce: this.nonce,\n      frames: this.frames.map(val => val.valueOf())\n    };\n  }\n  setVersion(version) {\n    this.flag |= 0b00000001;\n    this.version = version;\n  }\n  setPacketNumber(packetNumber) {\n    this.packetNumber = packetNumber;\n    this.flag &= 0b11001111;\n    this.flag |= packetNumber.flagBits() << 4;\n  }\n  needAck() {\n    for (const frame of this.frames) {\n      if (frame.isRetransmittable()) {\n        return true;\n      }\n    }\n    return false;\n  }\n  parseFrames(bufv) {\n    while (bufv.end < bufv.length) {\n      this.addFrames(frame_1.parseFrame(bufv, this.packetNumber));\n    }\n  }\n  addFrames(...frames) {\n    this.frames.push(...frames);\n    return this;\n  }\n  headerLen() {\n    let len = 9;\n    if (this.version !== '') {\n      len += 4;\n    }\n    if (this.nonce != null) {\n      len += 32;\n    }\n    len += this.packetNumber.byteLen();\n    return len;\n  }\n  byteLen() {\n    let len = this.headerLen();\n    for (const frame of this.frames) {\n      len += frame.byteLen();\n    }\n    return len;\n  }\n  writeTo(bufv) {\n    bufv.walk(1);\n    bufv.buf.writeUInt8(this.flag, bufv.start);\n    this.connectionID.writeTo(bufv);\n    if (this.version !== '') {\n      bufv.walk(4);\n      bufv.buf.write(this.version, bufv.start, 4);\n    }\n    if (this.nonce != null) {\n      bufv.walk(32);\n      this.nonce.copy(bufv.buf, bufv.start, 0, 32);\n    }\n    this.packetNumber.writeTo(bufv);\n    for (const frame of this.frames) {\n      frame.writeTo(bufv);\n    }\n    return bufv;\n  }\n}\nexports.RegularPacket = RegularPacket;","map":{"version":3,"names":["util_1","require","error_1","common_1","frame_1","protocol_1","parsePacket","bufv","packetSentBy","walk","flag","buf","readUInt8","start","QuicError","ResetPacket","fromBuffer","hasVersion","SessionType","SERVER","NegotiationPacket","RegularPacket","exports","Packet","_bufv","_flag","_packetSentBy","Error","constructor","connectionID","sentTime","isReset","isNegotiation","isRegular","valueOf","toString","JSON","stringify","inspect","custom","_depth","_options","name","ConnectionID","quicTag","QuicTags","Tag","PRST","has","RNON","tags","packetNumber","socketAddress","nonceProof","get","rseq","RSEQ","PacketNumber","BufferVisitor","length","cadr","CADR","SocketAddress","byteLen","writeTo","writeUInt8","fromConnectionID","getVersions","versions","end","version","isSupportedVersion","push","write","nonce","slice","flagToByteLen","packet","setVersion","flagBits","frames","isRetransmittable","map","val","setPacketNumber","needAck","frame","parseFrames","addFrames","parseFrame","headerLen","len","copy"],"sources":["../../src/internal/packet.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}