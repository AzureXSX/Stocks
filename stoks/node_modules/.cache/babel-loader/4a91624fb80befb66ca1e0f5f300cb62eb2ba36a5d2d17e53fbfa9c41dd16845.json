{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst dgram_1 = require(\"dgram\");\nconst symbol_1 = require(\"./internal/symbol\");\nconst error_1 = require(\"./internal/error\");\nconst common_1 = require(\"./internal/common\");\nconst constant_1 = require(\"./internal/constant\");\nclass SocketState {\n  constructor() {\n    this.exclusive = true;\n    this.destroyed = false;\n    this.conns = new Map();\n  }\n}\nexports.SocketState = SocketState;\nfunction createSocket(family) {\n  const socket = dgram_1.createSocket(family === 6 ? 'udp6' : 'udp4');\n  const state = new SocketState();\n  socket.once('close', () => {\n    state.destroyed = true;\n    socket.removeAllListeners();\n  });\n  Object.assign(socket, {\n    [symbol_1.kState]: state\n  });\n  return socket;\n}\nexports.createSocket = createSocket;\nconst bufferPool = [];\nfunction sendPacket(socket, packet, remotePort, remoteAddr, callback) {\n  const byteLen = packet.byteLen();\n  if (byteLen > constant_1.MaxReceivePacketSize) {\n    return callback(new error_1.QuicError('packet size too large!'));\n  }\n  if (socket[symbol_1.kState].destroyed) {\n    return callback(new error_1.QuicError('socket destroyed!'));\n  }\n  let bufv = bufferPool.shift();\n  if (bufv == null) {\n    bufv = new common_1.BufferVisitor(Buffer.alloc(constant_1.MaxReceivePacketSize));\n  } else {\n    bufv.reset();\n  }\n  packet.writeTo(bufv);\n  socket.send(bufv.buf, 0, bufv.end, remotePort, remoteAddr, err => {\n    packet.sentTime = Date.now();\n    bufferPool.push(bufv);\n    callback(error_1.QuicError.checkAny(err));\n  });\n}\nexports.sendPacket = sendPacket;","map":{"version":3,"names":["dgram_1","require","symbol_1","error_1","common_1","constant_1","SocketState","constructor","exclusive","destroyed","conns","Map","exports","createSocket","family","socket","state","once","removeAllListeners","Object","assign","kState","bufferPool","sendPacket","packet","remotePort","remoteAddr","callback","byteLen","MaxReceivePacketSize","QuicError","bufv","shift","BufferVisitor","Buffer","alloc","reset","writeTo","send","buf","end","err","sentTime","Date","now","push","checkAny"],"sources":["../src/socket.ts"],"sourcesContent":[null],"mappings":"AAAA,YAAY;;;;;AACZ;AACA;AACA;AAEA,MAAAA,OAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAIA,MAAAE,OAAA,GAAAF,OAAA;AACA,MAAAG,QAAA,GAAAH,OAAA;AACA,MAAAI,UAAA,GAAAJ,OAAA;AAcA,MAAAK,WAAA;EAIEC,YAAA;IACE,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,EAAE;EACxB;;AARFC,OAAA,CAAAN,WAAA,GAAAA,WAAA;AAWA,SAAAO,aAA8BC,MAAc;EAC1C,MAAMC,MAAM,GAAGf,OAAA,CAAAa,YAAS,CAACC,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM,CAAC;EACxD,MAAME,KAAK,GAAG,IAAIV,WAAW,EAAE;EAE/BS,MAAM,CAACE,IAAI,CAAC,OAAO,EAAE,MAAK;IACxBD,KAAK,CAACP,SAAS,GAAG,IAAI;IACtBM,MAAM,CAACG,kBAAkB,EAAE;EAC7B,CAAC,CAAC;EACFC,MAAM,CAACC,MAAM,CAACL,MAAM,EAAE;IAAE,CAACb,QAAA,CAAAmB,MAAM,GAAGL;EAAK,CAAE,CAAC;EAC1C,OAAOD,MAAgB;AACzB;AAVAH,OAAA,CAAAC,YAAA,GAAAA,YAAA;AAYA,MAAMS,UAAU,GAAoB,EAAE;AACtC,SAAAC,WAA4BR,MAAc,EAAES,MAAc,EAAEC,UAAkB,EAAEC,UAAkB,EAAEC,QAA4B;EAC9H,MAAMC,OAAO,GAAGJ,MAAM,CAACI,OAAO,EAAE;EAChC,IAAIA,OAAO,GAAGvB,UAAA,CAAAwB,oBAAoB,EAAE;IAClC,OAAOF,QAAQ,CAAC,IAAIxB,OAAA,CAAA2B,SAAS,CAAC,wBAAwB,CAAC,CAAC;;EAE1D,IAAIf,MAAM,CAACb,QAAA,CAAAmB,MAAM,CAAC,CAACZ,SAAS,EAAE;IAC5B,OAAOkB,QAAQ,CAAC,IAAIxB,OAAA,CAAA2B,SAAS,CAAC,mBAAmB,CAAC,CAAC;;EAGrD,IAAIC,IAAI,GAAGT,UAAU,CAACU,KAAK,EAAE;EAC7B,IAAID,IAAI,IAAI,IAAI,EAAE;IAChBA,IAAI,GAAG,IAAI3B,QAAA,CAAA6B,aAAa,CAACC,MAAM,CAACC,KAAK,CAAC9B,UAAA,CAAAwB,oBAAoB,CAAC,CAAC;GAC7D,MAAM;IACLE,IAAI,CAACK,KAAK,EAAE;;EAEdZ,MAAM,CAACa,OAAO,CAACN,IAAI,CAAC;EACpBhB,MAAM,CAACuB,IAAI,CAACP,IAAI,CAACQ,GAAG,EAAE,CAAC,EAAER,IAAI,CAACS,GAAG,EAAEf,UAAU,EAAEC,UAAU,EAAGe,GAAQ,IAAI;IACtEjB,MAAM,CAACkB,QAAQ,GAAGC,IAAI,CAACC,GAAG,EAAE;IAC5BtB,UAAU,CAACuB,IAAI,CAACd,IAAqB,CAAC;IACtCJ,QAAQ,CAACxB,OAAA,CAAA2B,SAAS,CAACgB,QAAQ,CAACL,GAAG,CAAC,CAAC;EACnC,CAAC,CAAC;AACJ;AArBA7B,OAAA,CAAAW,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}