{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\n// https://docs.google.com/document/d/1F2YfdDXKpy20WVKJueEf4abn_LVZHhMUMS5gX6Pgjl4/edit#\nclass FlowController {\n  constructor(windowSize, windowSizeLimit) {\n    // Both stream and session windows start with a default value of 16 KB\n    this.maxSendOffset = 16 * 1024;\n    this.maxReceiveOffset = 16 * 1024;\n    this.maxReceiveWindowSize = windowSize;\n    this.maxReceiveWindowSizeLimit = windowSizeLimit;\n    this.writtenOffset = 0;\n    this.consumedOffset = 0;\n    this.highestReceivedOffset = 0;\n    this.lastWindowUpdateAt = 0;\n  }\n  updateMaxSendOffset(byteOffset) {\n    if (byteOffset > this.maxSendOffset) {\n      this.maxSendOffset = byteOffset;\n      return true;\n    }\n    return false;\n  }\n  shouldUpdateWindow() {\n    return this.maxReceiveOffset - this.consumedOffset < this.maxReceiveWindowSize / 2;\n  }\n  updateWindowOffset(rtt) {\n    const time = Date.now();\n    this._autoTuning(rtt, time);\n    this.lastWindowUpdateAt = time;\n    this.maxReceiveOffset = this.consumedOffset + this.maxReceiveWindowSize;\n    return this.maxReceiveOffset;\n  }\n  _autoTuning(rtt, now) {\n    if (this.lastWindowUpdateAt > 0 && this.maxReceiveWindowSize < this.maxReceiveWindowSizeLimit && now - this.lastWindowUpdateAt <= rtt * 2) {\n      this.maxReceiveWindowSize = Math.min(this.maxReceiveWindowSize * 2, this.maxReceiveWindowSizeLimit);\n    }\n  }\n}\nexports.FlowController = FlowController;\nclass ConnectionFlowController extends FlowController {\n  constructor(windowSize, windowSizeLimit) {\n    super(windowSize, windowSizeLimit);\n    this.lastBlockedAt = 0;\n    this.lastBlockedStreamId = 0;\n  }\n  updateBlockedFrame(streamId, rcvTime) {\n    this.lastBlockedAt = rcvTime;\n    this.lastBlockedStreamId = streamId;\n  }\n}\nexports.ConnectionFlowController = ConnectionFlowController;\nclass StreamFlowController extends FlowController {\n  constructor(windowSize, windowSizeLimit, cfc) {\n    super(windowSize, windowSizeLimit);\n    this.cfc = cfc;\n  }\n  updateWrittenOffset(byteLen) {\n    this.writtenOffset += byteLen;\n    this.cfc.writtenOffset += byteLen;\n  }\n  updateConsumedOffset(consumedOffset) {\n    if (consumedOffset > this.consumedOffset) {\n      this.cfc.consumedOffset -= this.consumedOffset;\n      this.consumedOffset = consumedOffset;\n      this.cfc.consumedOffset += consumedOffset;\n    }\n  }\n  updateHighestReceived(byteOffset) {\n    if (byteOffset > this.highestReceivedOffset) {\n      this.cfc.highestReceivedOffset -= this.highestReceivedOffset;\n      this.highestReceivedOffset = byteOffset;\n      this.cfc.highestReceivedOffset += byteOffset;\n    }\n  }\n  isBlocked() {\n    return this.highestReceivedOffset > this.maxReceiveOffset;\n  }\n  willBlocked(byteLen) {\n    return byteLen > 0 && this.maxSendOffset - this.writtenOffset < byteLen;\n  }\n}\nexports.StreamFlowController = StreamFlowController;","map":{"version":3,"names":["FlowController","constructor","windowSize","windowSizeLimit","maxSendOffset","maxReceiveOffset","maxReceiveWindowSize","maxReceiveWindowSizeLimit","writtenOffset","consumedOffset","highestReceivedOffset","lastWindowUpdateAt","updateMaxSendOffset","byteOffset","shouldUpdateWindow","updateWindowOffset","rtt","time","Date","now","_autoTuning","Math","min","exports","ConnectionFlowController","lastBlockedAt","lastBlockedStreamId","updateBlockedFrame","streamId","rcvTime","StreamFlowController","cfc","updateWrittenOffset","byteLen","updateConsumedOffset","updateHighestReceived","isBlocked","willBlocked"],"sources":["../../src/internal/flowcontrol.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}