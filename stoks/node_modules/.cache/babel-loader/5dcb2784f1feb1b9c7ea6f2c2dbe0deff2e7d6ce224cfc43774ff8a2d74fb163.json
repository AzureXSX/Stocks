{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst util_1 = require(\"util\");\nconst events_1 = require(\"events\");\nconst constant_1 = require(\"./internal/constant\");\nconst common_1 = require(\"./internal/common\");\nconst error_1 = require(\"./internal/error\");\nconst packet_1 = require(\"./internal/packet\");\nconst symbol_1 = require(\"./internal/symbol\");\nconst protocol_1 = require(\"./internal/protocol\");\nconst socket_1 = require(\"./socket\");\nconst session_1 = require(\"./session\");\nconst debug = util_1.debuglog('quic');\nclass ServerSession extends session_1.Session {\n  constructor(id, socket, server) {\n    super(id, protocol_1.SessionType.SERVER);\n    this[symbol_1.kSocket] = socket;\n    this[symbol_1.kServer] = server;\n    this[symbol_1.kState].localPort = server.localPort;\n    this[symbol_1.kState].localAddress = server.localAddress;\n    this[symbol_1.kState].localFamily = server.localFamily;\n    this[symbol_1.kState].localAddr = new protocol_1.SocketAddress(server.address());\n    this[symbol_1.kState].maxPacketSize = server.localFamily === protocol_1.FamilyType.IPv6 ? constant_1.MaxPacketSizeIPv6 : constant_1.MaxPacketSizeIPv4;\n  }\n  get server() {\n    return this[symbol_1.kServer];\n  }\n}\nexports.ServerSession = ServerSession;\nclass ServerState {\n  constructor() {\n    this.destroyed = false;\n  }\n}\nexports.ServerState = ServerState;\n//\n// *************** Server ***************\n//\nclass Server extends events_1.EventEmitter {\n  constructor() {\n    super();\n    this[symbol_1.kSocket] = null;\n    this.localFamily = '';\n    this.localAddress = '';\n    this.localPort = 0;\n    this.listening = false;\n    this[symbol_1.kConns] = new Map();\n    this[symbol_1.kState] = new ServerState();\n    this[symbol_1.kIntervalCheck] = setInterval(() => {\n      const time = Date.now();\n      this._intervalCheck(time);\n    }, 1024);\n  }\n  address() {\n    return {\n      port: this.localPort,\n      family: this.localFamily,\n      address: this.localAddress\n    };\n  }\n  async listen(port, address = 'localhost') {\n    if (this[symbol_1.kSocket] != null) {\n      throw new Error('Server listening');\n    }\n    const addr = await common_1.lookup(address);\n    debug(`server listen: ${address}, ${port}`, addr);\n    const socket = this[symbol_1.kSocket] = socket_1.createSocket(addr.family);\n    socket[symbol_1.kState].exclusive = false; // socket is shared between all sessions\n    socket.on('error', err => this.emit('error', err)).on('close', () => serverOnClose(this)).on('message', (msg, rinfo) => serverOnMessage(this, socket, msg, rinfo));\n    const res = new Promise((resolve, reject) => {\n      socket.once('listening', () => {\n        socket.removeListener('error', reject);\n        const localAddr = socket.address();\n        this.localFamily = localAddr.family;\n        this.localAddress = localAddr.address;\n        this.localPort = localAddr.port;\n        this.listening = true;\n        process.nextTick(() => this.emit('listening'));\n        resolve();\n      });\n      socket.once('error', reject);\n    });\n    // Can't support cluster\n    socket.bind({\n      port,\n      address: addr.address,\n      exclusive: true\n    });\n    return res;\n  }\n  _intervalCheck(time) {\n    for (const session of this[symbol_1.kConns].values()) {\n      // server session idle timeout\n      if (time - session[symbol_1.kState].lastNetworkActivityTime > session[symbol_1.kState].idleTimeout) {\n        // When a server decides to terminate an idle connection,\n        // it should not notify the client to avoid waking up the radio on mobile devices.\n        if (!session.destroyed) {\n          session.emit('timeout');\n          session.destroy(error_1.QuicError.fromError(error_1.QuicError.QUIC_NETWORK_IDLE_TIMEOUT));\n        }\n        this[symbol_1.kConns].delete(session.id);\n        return;\n      }\n      // other session check\n      session._intervalCheck(time);\n    }\n    return;\n  }\n  shutdown(_timeout) {\n    return Promise.reject('TODO');\n  }\n  async close(err) {\n    if (this[symbol_1.kState].destroyed) {\n      return;\n    }\n    this[symbol_1.kState].destroyed = true;\n    for (const session of this[symbol_1.kConns].values()) {\n      await session.close(err);\n    }\n    const timer = this[symbol_1.kIntervalCheck];\n    if (timer != null) {\n      clearInterval(timer);\n    }\n    const socket = this[symbol_1.kSocket];\n    if (socket != null && !socket[symbol_1.kState].destroyed) {\n      socket.close();\n      socket[symbol_1.kState].destroyed = true;\n    }\n    process.nextTick(() => this.emit('close'));\n  }\n  getConnections() {\n    return Promise.resolve(this[symbol_1.kConns].size); // TODO\n  }\n  ref() {\n    const socket = this[symbol_1.kSocket];\n    if (socket == null) {\n      throw new Error('Server not listen');\n    }\n    socket.ref();\n  }\n  unref() {\n    const socket = this[symbol_1.kSocket];\n    if (socket == null) {\n      throw new Error('Server not listen');\n    }\n    socket.unref();\n  }\n}\nexports.Server = Server;\nfunction serverOnClose(server) {\n  for (const session of server[symbol_1.kConns].values()) {\n    session.destroy(new Error('the underlying socket closed'));\n  }\n  // server[kConns].clear()\n  if (!server[symbol_1.kState].destroyed) {\n    const timer = server[symbol_1.kIntervalCheck];\n    if (timer != null) {\n      clearInterval(timer);\n    }\n    server[symbol_1.kState].destroyed = true;\n    server.emit('close');\n  }\n}\nfunction serverOnMessage(server, socket, msg, rinfo) {\n  if (msg.length === 0 || server[symbol_1.kState].destroyed) {\n    return;\n  }\n  // The packet size should not exceed protocol.MaxReceivePacketSize bytes\n  // If it does, we only read a truncated packet, which will then end up undecryptable\n  if (msg.length > constant_1.MaxReceivePacketSize) {\n    debug(`server message - receive too large data: $d bytes`, msg.length);\n    // msg = msg.slice(0, MaxReceivePacketSize)\n  }\n  const senderAddr = new protocol_1.SocketAddress(rinfo);\n  const rcvTime = Date.now();\n  const bufv = new common_1.BufferVisitor(msg);\n  let packet = null;\n  try {\n    packet = packet_1.parsePacket(bufv, protocol_1.SessionType.CLIENT);\n  } catch (err) {\n    debug(`server message - parsing packet error: %o`, err);\n    // drop this packet if we can't parse the Public Header\n    return;\n  }\n  if (packet.isNegotiation()) {\n    debug(`server message - Received a unexpect Negotiation packet.`);\n    return;\n  }\n  const connectionID = packet.connectionID.valueOf();\n  let session = server[symbol_1.kConns].get(connectionID);\n  const newSession = session == null;\n  if (session == null) {\n    if (packet.isReset()) {\n      return;\n    }\n    session = new ServerSession(packet.connectionID, socket, server);\n    server[symbol_1.kConns].set(connectionID, session);\n    debug(`server message - new session: %s`, connectionID);\n  } else if (session.destroyed) {\n    // Late packet for closed session\n    return;\n  }\n  if (packet.isReset()) {\n    // check if the remote address and the connection ID match\n    // otherwise this might be an attacker trying to inject a PUBLIC_RESET to kill the connection\n    const remoteAddr = session[symbol_1.kState].remoteAddr;\n    if (remoteAddr !== null && !remoteAddr.equals(senderAddr)) {\n      debug(`session %s - received a spoofed Public Reset: %j`, session.id, senderAddr);\n      return;\n    }\n    debug(`session %s - received a Public Reset: %j`, session.id, packet);\n    session.destroy(error_1.QuicError.fromError(error_1.QuicError.QUIC_PUBLIC_RESET));\n    return;\n  }\n  // update the remote address, even if unpacking failed for any other reason than a decryption error\n  session[symbol_1.kState].remotePort = senderAddr.port;\n  session[symbol_1.kState].remoteAddress = senderAddr.address;\n  session[symbol_1.kState].remoteFamily = senderAddr.family;\n  session[symbol_1.kState].remoteAddr = senderAddr;\n  if (newSession) {\n    server.emit('session', session);\n  }\n  const version = packet.version;\n  if (!session[symbol_1.kState].versionNegotiated) {\n    if (!protocol_1.isSupportedVersion(version)) {\n      const negotiationPacket = packet_1.NegotiationPacket.fromConnectionID(session[symbol_1.kID]);\n      debug(`session %s - send Public Negotiation: %j`, session.id, negotiationPacket);\n      session._sendPacket(negotiationPacket, err => {\n        if (err != null && session != null) {\n          session.close(err);\n        }\n      });\n      return;\n    }\n    session[symbol_1.kVersion] = version;\n    session[symbol_1.kState].versionNegotiated = true;\n  } else if (version !== '' && session[symbol_1.kVersion] !== version) {\n    debug(`session %s - invalid version in RegularPacket: %s`, session.id, version);\n    return;\n  }\n  session[symbol_1.kState].bytesRead += msg.length;\n  session._handleRegularPacket(packet, rcvTime, bufv);\n}","map":{"version":3,"names":["util_1","require","events_1","constant_1","common_1","error_1","packet_1","symbol_1","protocol_1","socket_1","session_1","debug","debuglog","ServerSession","Session","constructor","id","socket","server","SessionType","SERVER","kSocket","kServer","kState","localPort","localAddress","localFamily","localAddr","SocketAddress","address","maxPacketSize","FamilyType","IPv6","MaxPacketSizeIPv6","MaxPacketSizeIPv4","exports","ServerState","destroyed","Server","EventEmitter","listening","kConns","Map","kIntervalCheck","setInterval","time","Date","now","_intervalCheck","port","family","listen","Error","addr","lookup","createSocket","exclusive","on","err","emit","serverOnClose","msg","rinfo","serverOnMessage","res","Promise","resolve","reject","once","removeListener","process","nextTick","bind","session","values","lastNetworkActivityTime","idleTimeout","destroy","QuicError","fromError","QUIC_NETWORK_IDLE_TIMEOUT","delete","shutdown","_timeout","close","timer","clearInterval","getConnections","size","ref","unref","length","MaxReceivePacketSize","senderAddr","rcvTime","bufv","BufferVisitor","packet","parsePacket","CLIENT","isNegotiation","connectionID","valueOf","get","newSession","isReset","set","remoteAddr","equals","QUIC_PUBLIC_RESET","remotePort","remoteAddress","remoteFamily","version","versionNegotiated","isSupportedVersion","negotiationPacket","NegotiationPacket","fromConnectionID","kID","_sendPacket","kVersion","bytesRead","_handleRegularPacket"],"sources":["../src/server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}