{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst util_1 = require(\"util\");\nconst dns_1 = require(\"dns\");\nexports.lookup = util_1.promisify(dns_1.lookup);\nclass Visitor {\n  constructor(start = 0, end = 0) {\n    this.start = start;\n    this.end = end > start ? end : start;\n  }\n  reset(start = 0, end = 0) {\n    this.start = start;\n    if (end >= this.start) {\n      this.end = end;\n    } else if (this.end < this.start) {\n      this.end = this.start;\n    }\n    return this;\n  }\n  walk(steps) {\n    this.start = this.end;\n    this.end += steps;\n    return this;\n  }\n}\nexports.Visitor = Visitor;\nclass BufferVisitor extends Visitor {\n  constructor(buf, start = 0, end = 0) {\n    super(start, end);\n    this.buf = buf;\n  }\n  get length() {\n    return this.buf.length;\n  }\n  isOutside() {\n    return this.end > this.buf.length;\n  }\n}\nexports.BufferVisitor = BufferVisitor;\nfunction toBuffer(obj) {\n  const bufv = obj.writeTo(new BufferVisitor(Buffer.alloc(obj.byteLen())));\n  return bufv.buf;\n}\nexports.toBuffer = toBuffer;\n// We define an unsigned 16-bit floating point value, inspired by IEEE floats\n// (http://en.wikipedia.org/wiki/Half_precision_floating-point_format),\n// with 5-bit exponent (bias 1), 11-bit mantissa (effective 12 with hidden\n// bit) and denormals, but without signs, transfinites or fractions. Wire format\n// 16 bits (little-endian byte order) are split into exponent (high 5) and\n// mantissa (low 11)\n// https://github.com/google/proto-quic/blob/master/src/net/quic/core/quic_protocol.h#L197\nconst Float16ExponentBits = 5;\nconst Float16MantissaBits = 16 - Float16ExponentBits; // 11\nconst Float16MantissaEffectiveBits = Float16MantissaBits + 1; // 12\nconst Float16MantissaEffectiveValue = 1 << Float16MantissaEffectiveBits;\n// Float16MaxValue === readUFloat16(<Buffer 0xff 0xff>)\nexports.Float16MaxValue = 0x3FFC0000000;\nfunction readUFloat16(buf, offset = 0) {\n  let value = buf.readUInt16BE(offset);\n  if (value < Float16MantissaEffectiveValue) {\n    return value;\n  }\n  let exponent = value >> Float16MantissaBits;\n  --exponent;\n  value -= exponent << Float16MantissaBits;\n  // we can only use binary bitwise operators in 32 bits\n  const res = value * Math.pow(2, exponent);\n  return res < exports.Float16MaxValue ? res : exports.Float16MaxValue;\n}\nexports.readUFloat16 = readUFloat16;\nfunction writeUFloat16(buf, value, offset) {\n  let res = 0;\n  if (value < Float16MantissaEffectiveValue) {\n    res = value;\n  } else if (value >= exports.Float16MaxValue) {\n    res = 0xffff;\n  } else {\n    let exponent = 0;\n    for (let i = 16; i >= 1; i /= 2) {\n      if (value >= 1 << Float16MantissaBits + i) {\n        exponent += i;\n        value /= Math.pow(2, i);\n      }\n    }\n    res = Math.floor(value) + (exponent << Float16MantissaBits);\n  }\n  buf.writeUInt16BE(res, offset);\n  return buf;\n}\nexports.writeUFloat16 = writeUFloat16;\nconst unsafeUIntRadix = 0xffffffffffff + 1;\nfunction readUnsafeUInt(buf, offset, len) {\n  let val = 0;\n  if (len > 6) {\n    val = buf.readUIntBE(offset + len - 6, 6);\n    const high = buf.readUIntBE(offset, len - 6);\n    if (high > 0) {\n      val += high * unsafeUIntRadix;\n    }\n  } else if (len > 0) {\n    val = buf.readUIntBE(offset, len);\n  }\n  return val;\n}\nexports.readUnsafeUInt = readUnsafeUInt;\nfunction writeUnsafeUInt(buf, val, offset, len) {\n  if (len > 6) {\n    if (val <= 0xffffffffffff) {\n      buf.writeUIntBE(val, offset + len - 6, 6);\n      buf.writeUIntBE(0, offset, len - 6); // clear cached bits\n    } else {\n      const high = Math.floor(val / unsafeUIntRadix);\n      buf.writeUIntBE(val - high * unsafeUIntRadix, offset + len - 6, 6);\n      buf.writeUIntBE(high, offset, len - 6);\n    }\n  } else if (len > 0) {\n    buf.writeUIntBE(val, offset, len);\n  }\n  return buf;\n}\nexports.writeUnsafeUInt = writeUnsafeUInt;\nclass Queue {\n  constructor() {\n    this.tail = [];\n    this.head = [];\n    this.offset = 0;\n    this.hLength = 0;\n  }\n  get length() {\n    return this.hLength + this.tail.length - this.offset;\n  }\n  first() {\n    return this.hLength === this.offset ? this.tail[0] : this.head[this.offset];\n  }\n  push(item) {\n    this.tail.push(item);\n  }\n  pop() {\n    if (this.tail.length > 0) {\n      return this.tail.pop();\n    }\n    if (this.hLength === 0) {\n      return;\n    }\n    this.hLength--;\n    return this.head.pop();\n  }\n  unshift(item) {\n    if (this.offset === 0) {\n      this.hLength++;\n      this.head.unshift(item);\n    } else {\n      this.offset--;\n      this.head[this.offset] = item;\n    }\n  }\n  shift() {\n    if (this.offset === this.hLength) {\n      if (this.tail.length === 0) {\n        return;\n      }\n      const tmp = this.head;\n      tmp.length = 0;\n      this.head = this.tail;\n      this.tail = tmp;\n      this.offset = 0;\n      this.hLength = this.head.length;\n    }\n    return this.head[this.offset++];\n  }\n  toArray() {\n    const arr = [];\n    if (this.offset === this.hLength) {\n      for (const item of this.tail) {\n        arr.push(item);\n      }\n    } else {\n      for (let i = this.offset, l = this.head.length; i < l; i++) {\n        arr.push(this.head[i]);\n      }\n    }\n    return arr;\n  }\n  reset() {\n    this.offset = 0;\n    this.hLength = 0;\n    this.tail.length = 0;\n    this.head.length = 0;\n  }\n  migrateTo(queue) {\n    let i = this.offset;\n    const len = this.tail.length;\n    while (i < this.hLength) {\n      queue.push(this.head[i++]);\n    }\n    i = 0;\n    while (i < len) {\n      queue.push(this.tail[i++]);\n    }\n    this.offset = this.hLength = this.head.length = this.tail.length = 0;\n    return queue;\n  }\n}\nexports.Queue = Queue;","map":{"version":3,"names":["util_1","require","dns_1","exports","lookup","promisify","Visitor","constructor","start","end","reset","walk","steps","BufferVisitor","buf","length","isOutside","toBuffer","obj","bufv","writeTo","Buffer","alloc","byteLen","Float16ExponentBits","Float16MantissaBits","Float16MantissaEffectiveBits","Float16MantissaEffectiveValue","Float16MaxValue","readUFloat16","offset","value","readUInt16BE","exponent","res","Math","pow","writeUFloat16","i","floor","writeUInt16BE","unsafeUIntRadix","readUnsafeUInt","len","val","readUIntBE","high","writeUnsafeUInt","writeUIntBE","Queue","tail","head","hLength","first","push","item","pop","unshift","shift","tmp","toArray","arr","l","migrateTo","queue"],"sources":["../../src/internal/common.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}