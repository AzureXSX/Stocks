{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst util_1 = require(\"util\");\nconst constant_1 = require(\"./internal/constant\");\nconst common_1 = require(\"./internal/common\");\nconst error_1 = require(\"./internal/error\");\nconst packet_1 = require(\"./internal/packet\");\nconst protocol_1 = require(\"./internal/protocol\");\nconst symbol_1 = require(\"./internal/symbol\");\nconst socket_1 = require(\"./socket\");\nconst session_1 = require(\"./session\");\nconst debug = util_1.debuglog('quic');\n// const _SCFGCache = new Map<string, {}>()\n//\n// *************** Client ***************\n//\nclass Client extends session_1.Session {\n  constructor() {\n    super(protocol_1.ConnectionID.random(), protocol_1.SessionType.CLIENT);\n    this[symbol_1.kVersion] = protocol_1.getVersion();\n    this[symbol_1.kClientState] = new ClientState();\n    this[symbol_1.kIntervalCheck] = setInterval(() => {\n      const time = Date.now();\n      // client session idle timeout\n      if (time - this[symbol_1.kState].lastNetworkActivityTime > this[symbol_1.kState].idleTimeout) {\n        this.emit('timeout');\n        this.close(error_1.QuicError.fromError(error_1.QuicError.QUIC_NETWORK_IDLE_TIMEOUT));\n        return;\n      }\n      // other session check\n      this._intervalCheck(time);\n    }, 512);\n  }\n  _resendPacketsForNegotiation() {\n    const packets = this[symbol_1.kUnackedPackets].toArray();\n    this[symbol_1.kUnackedPackets].reset();\n    for (const packet of packets) {\n      this._sendPacket(packet, err => {\n        if (err != null && !this.destroyed) {\n          this.destroy(err);\n        }\n      });\n    }\n  }\n  setKeepAlive(enable, _initialDelay) {\n    this[symbol_1.kState].keepAlivePingSent = enable;\n    // initialDelay TODO\n  }\n  ref() {\n    const socket = this[symbol_1.kSocket];\n    if (socket == null) {\n      throw new Error('Client not connect');\n    }\n    socket.ref();\n  }\n  unref() {\n    const socket = this[symbol_1.kSocket];\n    if (socket == null) {\n      throw new Error('Client not connect');\n    }\n    socket.unref();\n  }\n  async spawn(port, address = 'localhost') {\n    if (this[symbol_1.kState].destroyed) {\n      throw new Error('Client destroyed');\n    }\n    const socket = this[symbol_1.kSocket];\n    if (socket == null || socket[symbol_1.kState].destroyed) {\n      throw new Error('the underlying socket destroyed');\n    }\n    const addr = await common_1.lookup(address);\n    debug(`client connect: %s, %d, %j`, address, port, addr);\n    const client = new Client();\n    socket[symbol_1.kState].conns.set(client.id, client);\n    socket[symbol_1.kState].exclusive = false;\n    client[symbol_1.kSocket] = socket;\n    client[symbol_1.kState].localFamily = this[symbol_1.kState].localFamily;\n    client[symbol_1.kState].localAddress = this[symbol_1.kState].localAddress;\n    client[symbol_1.kState].localPort = this[symbol_1.kState].localPort;\n    client[symbol_1.kState].localAddr = new protocol_1.SocketAddress(socket.address());\n    client[symbol_1.kState].remotePort = port;\n    client[symbol_1.kState].remoteAddress = addr.address;\n    client[symbol_1.kState].remoteFamily = 'IPv' + addr.family;\n    client[symbol_1.kState].remoteAddr = new protocol_1.SocketAddress({\n      port,\n      address: addr.address,\n      family: `IPv${addr.family}`\n    });\n    client[symbol_1.kState].maxPacketSize = this[symbol_1.kState].maxPacketSize;\n    return client;\n  }\n  async connect(port, address = 'localhost') {\n    if (this[symbol_1.kState].destroyed) {\n      throw new Error('Client destroyed');\n    }\n    if (this[symbol_1.kSocket] != null) {\n      throw new Error('Client connecting duplicated');\n    }\n    const addr = await common_1.lookup(address);\n    debug(`client connect: %s, %d, %j`, address, port, addr);\n    this[symbol_1.kState].remotePort = port;\n    this[symbol_1.kState].remoteAddress = addr.address;\n    this[symbol_1.kState].remoteFamily = 'IPv' + addr.family;\n    this[symbol_1.kState].remoteAddr = new protocol_1.SocketAddress({\n      port,\n      address: addr.address,\n      family: `IPv${addr.family}`\n    });\n    this[symbol_1.kState].maxPacketSize = this[symbol_1.kState].localFamily === protocol_1.FamilyType.IPv6 ? constant_1.MaxPacketSizeIPv6 : constant_1.MaxPacketSizeIPv4;\n    const socket = this[symbol_1.kSocket] = socket_1.createSocket(addr.family);\n    socket[symbol_1.kState].conns.set(this.id, this);\n    socket.on('error', err => this.emit('error', err)).on('close', () => this.destroy(new Error('the underlying socket closed'))).on('message', socketOnMessage);\n    const res = new Promise((resolve, reject) => {\n      socket.once('listening', () => {\n        socket.removeListener('error', reject);\n        const localAddr = socket.address();\n        this[symbol_1.kState].localFamily = localAddr.family;\n        this[symbol_1.kState].localAddress = localAddr.address;\n        this[symbol_1.kState].localPort = localAddr.port;\n        this[symbol_1.kState].localAddr = new protocol_1.SocketAddress(localAddr);\n        resolve();\n        this.emit('connect');\n      });\n      socket.once('error', reject);\n    });\n    socket.bind({\n      exclusive: true,\n      port: 0\n    });\n    return res;\n  }\n}\nexports.Client = Client;\nclass ClientState {\n  constructor() {\n    this.hostname = '';\n    this.receivedNegotiationPacket = false;\n  }\n}\nexports.ClientState = ClientState;\nfunction socketOnMessage(msg, rinfo) {\n  if (msg.length === 0 || this[symbol_1.kState].destroyed) {\n    return;\n  }\n  // The packet size should not exceed protocol.MaxReceivePacketSize bytes\n  // If it does, we only read a truncated packet, which will then end up undecryptable\n  if (msg.length > constant_1.MaxReceivePacketSize) {\n    debug(`client message - receive too large data: %d bytes`, msg.length);\n    // msg = msg.slice(0, MaxReceivePacketSize)\n  }\n  const senderAddr = new protocol_1.SocketAddress(rinfo);\n  const rcvTime = Date.now();\n  const bufv = new common_1.BufferVisitor(msg);\n  let packet = null;\n  try {\n    packet = packet_1.parsePacket(bufv, protocol_1.SessionType.SERVER);\n  } catch (err) {\n    debug(`client message - parsing packet error: %o`, err);\n    // drop this packet if we can't parse the Public Header\n    return;\n  }\n  const connectionID = packet.connectionID.valueOf();\n  const client = this[symbol_1.kState].conns.get(connectionID);\n  if (client == null) {\n    // reject packets with the wrong connection ID\n    debug(`client message - received a spoofed packet with wrong ID: %s`, connectionID);\n    return;\n  } else if (client.destroyed) {\n    // Late packet for closed session\n    return;\n  }\n  if (packet.isReset()) {\n    // check if the remote address and the connection ID match\n    // otherwise this might be an attacker trying to inject a PUBLIC_RESET to kill the connection\n    const remoteAddr = client[symbol_1.kState].remoteAddr;\n    if (remoteAddr == null || !remoteAddr.equals(senderAddr)) {\n      debug(`session %s - received a spoofed Public Reset: %j`, client.id, senderAddr);\n      return;\n    }\n    debug(`session %s - Public Reset, rejected packet number: %j`, client.id, packet);\n    client.destroy(error_1.QuicError.fromError(error_1.QuicError.QUIC_PUBLIC_RESET));\n    return;\n  }\n  if (packet.isNegotiation()) {\n    // ignore delayed / duplicated version negotiation packets\n    if (client[symbol_1.kClientState].receivedNegotiationPacket || client[symbol_1.kState].versionNegotiated) {\n      return;\n    }\n    const versions = packet.versions;\n    if (client[symbol_1.kVersion] !== '' && versions.includes(client[symbol_1.kVersion])) {\n      // the version negotiation packet contains the version that we offered\n      // this might be a packet sent by an attacker (or by a terribly broken server implementation)\n      // ignore it\n      return;\n    }\n    const newVersion = protocol_1.chooseVersion(versions);\n    client[symbol_1.kClientState].receivedNegotiationPacket = true;\n    debug(`session %s - received Public Negotiation: %s`, client.id, newVersion);\n    if (newVersion !== '') {\n      // switch to negotiated version\n      client[symbol_1.kVersion] = newVersion;\n      client._resendPacketsForNegotiation();\n    } else {\n      client.destroy(error_1.QuicError.fromError(error_1.QuicError.QUIC_INVALID_VERSION));\n    }\n    return;\n  }\n  // this is the first packet after the client sent a packet with the VersionFlag set\n  // if the server doesn't send a version negotiation packet, it supports the suggested version\n  if (!client[symbol_1.kState].versionNegotiated) {\n    client[symbol_1.kState].versionNegotiated = true;\n    client.emit('version', client.version);\n  }\n  client[symbol_1.kState].bytesRead += msg.length;\n  client._handleRegularPacket(packet, rcvTime, bufv);\n}","map":{"version":3,"names":["util_1","require","constant_1","common_1","error_1","packet_1","protocol_1","symbol_1","socket_1","session_1","debug","debuglog","Client","Session","constructor","ConnectionID","random","SessionType","CLIENT","kVersion","getVersion","kClientState","ClientState","kIntervalCheck","setInterval","time","Date","now","kState","lastNetworkActivityTime","idleTimeout","emit","close","QuicError","fromError","QUIC_NETWORK_IDLE_TIMEOUT","_intervalCheck","_resendPacketsForNegotiation","packets","kUnackedPackets","toArray","reset","packet","_sendPacket","err","destroyed","destroy","setKeepAlive","enable","_initialDelay","keepAlivePingSent","ref","socket","kSocket","Error","unref","spawn","port","address","addr","lookup","client","conns","set","id","exclusive","localFamily","localAddress","localPort","localAddr","SocketAddress","remotePort","remoteAddress","remoteFamily","family","remoteAddr","maxPacketSize","connect","FamilyType","IPv6","MaxPacketSizeIPv6","MaxPacketSizeIPv4","createSocket","on","socketOnMessage","res","Promise","resolve","reject","once","removeListener","bind","exports","hostname","receivedNegotiationPacket","msg","rinfo","length","MaxReceivePacketSize","senderAddr","rcvTime","bufv","BufferVisitor","parsePacket","SERVER","connectionID","valueOf","get","isReset","equals","QUIC_PUBLIC_RESET","isNegotiation","versionNegotiated","versions","includes","newVersion","chooseVersion","QUIC_INVALID_VERSION","version","bytesRead","_handleRegularPacket"],"sources":["../src/client.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}