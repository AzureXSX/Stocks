{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n// **Github:** https://github.com/fidm/quic\n//\n// **License:** MIT\nconst util_1 = require(\"util\");\nconst crypto_1 = require(\"crypto\");\nconst error_1 = require(\"./error\");\nconst symbol_1 = require(\"./symbol\");\nconst common_1 = require(\"./common\");\nconst QUIC_VERSIONS = ['Q039'];\nvar SessionType;\n(function (SessionType) {\n  SessionType[SessionType[\"SERVER\"] = 0] = \"SERVER\";\n  SessionType[SessionType[\"CLIENT\"] = 1] = \"CLIENT\";\n})(SessionType = exports.SessionType || (exports.SessionType = {}));\nvar FamilyType;\n(function (FamilyType) {\n  FamilyType[\"IPv4\"] = \"IPv4\";\n  FamilyType[\"IPv6\"] = \"IPv6\";\n})(FamilyType = exports.FamilyType || (exports.FamilyType = {}));\n/**\n * Returns supported version.\n */\nfunction getVersion() {\n  return QUIC_VERSIONS[0];\n}\nexports.getVersion = getVersion;\n/**\n * Returns supported versions array.\n */\nfunction getVersions() {\n  return QUIC_VERSIONS.slice();\n}\nexports.getVersions = getVersions;\n/**\n * Chooses the best version in the overlap of ours and theirs.\n */\nfunction chooseVersion(theirs) {\n  for (const v of theirs) {\n    if (isSupportedVersion(v)) {\n      return v;\n    }\n  }\n  return '';\n}\nexports.chooseVersion = chooseVersion;\n/**\n * Returns true if the server supports this version.\n */\nfunction isSupportedVersion(version) {\n  return QUIC_VERSIONS.includes(version);\n}\nexports.isSupportedVersion = isSupportedVersion;\n/** Protocol representing a base protocol. */\nclass Protocol {\n  static fromBuffer(_bufv, _len) {\n    throw new Error(`class method \"fromBuffer\" is not implemented`);\n  }\n  constructor(val) {\n    this[symbol_1.kVal] = val;\n  }\n  [util_1.inspect.custom](_depth, _options) {\n    return `<${this.constructor.name} ${this.toString()}>`;\n  }\n}\nexports.Protocol = Protocol;\nconst ConnectionIDReg = /^[0-9a-f]{16}$/;\n/** ConnectionID representing a connectionID. */\nclass ConnectionID extends Protocol {\n  static fromBuffer(bufv) {\n    bufv.walk(8);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    return new ConnectionID(bufv.buf.toString('hex', bufv.start, bufv.end));\n  }\n  static random() {\n    return new ConnectionID(crypto_1.randomBytes(8).toString('hex'));\n  }\n  constructor(id) {\n    if (!ConnectionIDReg.test(id)) {\n      throw new Error('invalid Connection ID');\n    }\n    super(id);\n  }\n  /**\n   * @return {string} - 16 length hex string\n   */\n  valueOf() {\n    return this[symbol_1.kVal];\n  }\n  equals(other) {\n    return other instanceof ConnectionID && this.valueOf() === other.valueOf();\n  }\n  byteLen() {\n    return 8;\n  }\n  writeTo(bufv) {\n    bufv.walk(8);\n    bufv.buf.write(this[symbol_1.kVal], bufv.start, 8, 'hex');\n    return bufv;\n  }\n  toString() {\n    return this[symbol_1.kVal];\n  }\n}\nexports.ConnectionID = ConnectionID;\n/** PacketNumber representing a packetNumber. */\nclass PacketNumber extends Protocol {\n  // The lower 8, 16, 32, or 48 bits of the packet number, based on which\n  // FLAG_?BYTE_SEQUENCE_NUMBER flag is set in the public flags.\n  // Each Regular Packet (as opposed to the Special public reset and version\n  // negotiation packets) is assigned a packet number by the sender.\n  // The first packet sent by an endpoint shall have a packet number of 1, and\n  // each subsequent packet shall have a packet number one larger than that of the previous packet.\n  static flagToByteLen(flagBits) {\n    if ((flagBits & 0b11) !== flagBits) {\n      throw new Error('invalid flagBits');\n    }\n    return flagBits > 0 ? flagBits * 2 : 1;\n  }\n  static fromBuffer(bufv, len) {\n    bufv.walk(len);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    return new PacketNumber(bufv.buf.readUIntBE(bufv.start, len));\n  }\n  constructor(val) {\n    if (!Number.isInteger(val) || val < 1 || val > 0xffffffffffff) {\n      throw new Error(`invalid PacketNumber val ${val}`);\n    }\n    super(val);\n  }\n  valueOf() {\n    return this[symbol_1.kVal];\n  }\n  nextNumber() {\n    return new PacketNumber(this[symbol_1.kVal] + 1);\n  }\n  prevNumber() {\n    return new PacketNumber(this[symbol_1.kVal] - 1);\n  }\n  isLimitReached() {\n    // If a QUIC endpoint transmits a packet with a packet number of (2^64-1),\n    // that packet must include a CONNECTION_CLOSE frame with an error code of QUIC_SEQUENCE_NUMBER_LIMIT_REACHED,\n    // and the endpoint must not transmit any additional packets.\n    return this[symbol_1.kVal] >= 0xffffffffffff; // but here 2^48\n  }\n  delta(other) {\n    return Math.abs(this.valueOf() - other.valueOf());\n  }\n  closestTo(a, b) {\n    return this.delta(a) < this.delta(b) ? a : b;\n  }\n  flagBits() {\n    const byteLen = this.byteLen();\n    if (byteLen === 1) {\n      return 0;\n    }\n    return byteLen / 2;\n  }\n  equals(other) {\n    return other instanceof PacketNumber && this.valueOf() === other.valueOf();\n  }\n  byteLen(isFull = false) {\n    if (!isFull) {\n      const value = this[symbol_1.kVal];\n      if (value <= 0xff) {\n        return 1;\n      } else if (value <= 0xffff) {\n        return 2;\n      } else if (value <= 0xffffffff) {\n        return 4;\n      }\n    }\n    return 6;\n  }\n  writeTo(bufv, isFull = false) {\n    const len = isFull ? 6 : this.byteLen();\n    bufv.walk(len);\n    bufv.buf.writeUIntBE(this[symbol_1.kVal], bufv.start, len);\n    return bufv;\n  }\n  toString() {\n    return String(this[symbol_1.kVal]);\n  }\n}\nexports.PacketNumber = PacketNumber;\n/** StreamID representing a streamID. */\nclass StreamID extends Protocol {\n  // the Stream-ID must be even if the server initiates the stream, and odd if the client initiates the stream.\n  // 0 is not a valid Stream-ID. Stream 1 is reserved for the crypto handshake,\n  // which should be the first client-initiated stream.\n  /**\n   * 2 bits -> 8/8, 16/8, 24/8, 32/8\n   */\n  static flagToByteLen(flagBits) {\n    if ((flagBits & 0b11) !== flagBits) {\n      throw new Error('invalid flagBits');\n    }\n    return flagBits + 1;\n  }\n  static fromBuffer(bufv, len) {\n    bufv.walk(len);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INVALID_STREAM_DATA');\n    }\n    return new StreamID(bufv.buf.readUIntBE(bufv.start, len));\n  }\n  constructor(id) {\n    // StreamID(0) is used by WINDOW_UPDATE\n    if (!Number.isInteger(id) || id < 0 || id > 0xffffffff) {\n      throw new Error(`invalid Stream ID ${id}`);\n    }\n    super(id);\n  }\n  valueOf() {\n    return this[symbol_1.kVal];\n  }\n  flagBits() {\n    return this.byteLen() - 1;\n  }\n  nextID() {\n    const value = this[symbol_1.kVal] + 2;\n    return new StreamID(value <= 0xffffffff ? value : value - 0xffffffff);\n  }\n  prevID() {\n    return new StreamID(this[symbol_1.kVal] - 2);\n  }\n  equals(other) {\n    return other instanceof StreamID && this.valueOf() === other.valueOf();\n  }\n  byteLen(isFull = false) {\n    if (!isFull) {\n      const value = this[symbol_1.kVal];\n      if (value <= 0xff) {\n        return 1;\n      } else if (value <= 0xffff) {\n        return 2;\n      } else if (value <= 0xffffff) {\n        return 3;\n      }\n    }\n    return 4;\n  }\n  writeTo(bufv, isFull = false) {\n    const len = isFull ? 4 : this.byteLen();\n    bufv.walk(len);\n    bufv.buf.writeUIntBE(this[symbol_1.kVal], bufv.start, len);\n    return bufv;\n  }\n  toString() {\n    return String(this[symbol_1.kVal]);\n  }\n}\nexports.StreamID = StreamID;\n/** Offset representing a data offset. */\nclass Offset extends Protocol {\n  /**\n   * 3 bits -> 0, 16/8, 24/8, 32/8, 40/8, 48/8, 56/8, 64/8\n   */\n  static flagToByteLen(flagBits) {\n    if ((flagBits & 0b111) !== flagBits) {\n      throw new Error('invalid flagBits');\n    }\n    return flagBits > 0 ? flagBits + 1 : 0;\n  }\n  static fromBuffer(bufv, len) {\n    bufv.walk(len);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    return new Offset(common_1.readUnsafeUInt(bufv.buf, bufv.start, len));\n  }\n  constructor(offset) {\n    if (!Number.isSafeInteger(offset) || offset < 0) {\n      throw new Error(`invalid Offset ${offset}`);\n    }\n    super(offset);\n  }\n  valueOf() {\n    return this[symbol_1.kVal];\n  }\n  equals(other) {\n    return this.valueOf() === other.valueOf();\n  }\n  gt(other) {\n    return this.valueOf() > other.valueOf();\n  }\n  byteLen(isFull = false) {\n    if (!isFull) {\n      const value = this[symbol_1.kVal];\n      if (value === 0) {\n        return 0;\n      } else if (value <= 0xffff) {\n        return 2;\n      } else if (value <= 0xffffff) {\n        return 3;\n      } else if (value <= 0xffffffff) {\n        return 4;\n      } else if (value <= 0xffffffffff) {\n        return 5;\n      } else if (value <= 0xffffffffffff) {\n        return 6;\n      }\n      return 7; // value should small than 0xffffffffffffff\n    }\n    return 8;\n  }\n  /**\n   * 0, 16/8, 24/8, 32/8, 40/8, 48/8, 56/8, 64/8 -> 3 bits\n   */\n  flagBits() {\n    const byteLen = this.byteLen();\n    if (byteLen === 0) {\n      return 0;\n    }\n    return byteLen > 1 ? byteLen - 1 : 1;\n  }\n  writeTo(bufv, isFull = false) {\n    const len = isFull ? 8 : this.byteLen();\n    bufv.walk(len);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    common_1.writeUnsafeUInt(bufv.buf, this[symbol_1.kVal], bufv.start, len);\n    return bufv;\n  }\n  toString() {\n    return String(this[symbol_1.kVal]);\n  }\n}\nexports.Offset = Offset;\n/** SocketAddress representing a socket address. */\nclass SocketAddress extends Protocol {\n  static fromBuffer(bufv) {\n    const obj = {\n      address: '',\n      family: FamilyType.IPv4,\n      port: 0\n    };\n    bufv.walk(2);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    const family = bufv.buf.readUInt16BE(bufv.start);\n    if (family === 0x02) {\n      obj.family = FamilyType.IPv4;\n      bufv.walk(4);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      obj.address = [bufv.buf.readUInt8(bufv.start), bufv.buf.readUInt8(bufv.start + 1), bufv.buf.readUInt8(bufv.start + 2), bufv.buf.readUInt8(bufv.start + 3)].join('.');\n      bufv.walk(2);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      obj.port = bufv.buf.readUInt16BE(bufv.start);\n    } else if (family === 0x0a) {\n      obj.family = FamilyType.IPv6;\n      bufv.walk(16);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      obj.address = [bufv.buf.readUInt16BE(bufv.start).toString(16), bufv.buf.readUInt16BE(bufv.start + 2).toString(16), bufv.buf.readUInt16BE(bufv.start + 4).toString(16), bufv.buf.readUInt16BE(bufv.start + 6).toString(16), bufv.buf.readUInt16BE(bufv.start + 8).toString(16), bufv.buf.readUInt16BE(bufv.start + 10).toString(16), bufv.buf.readUInt16BE(bufv.start + 12).toString(16), bufv.buf.readUInt16BE(bufv.start + 14).toString(16)].join(':');\n      bufv.walk(2);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      obj.port = bufv.buf.readUInt16BE(bufv.start);\n    } else {\n      throw new Error('invalid SocketAddress buffer');\n    }\n    return new SocketAddress(obj);\n  }\n  constructor(obj) {\n    if (!isAddress(obj)) {\n      throw new Error(`invalid Socket Address ${JSON.stringify(obj)}`);\n    }\n    let address = obj.address;\n    if (address.includes('::')) {\n      const unfold = '0:';\n      if (address.startsWith('::')) {\n        address = '0' + address;\n      } else if (address.endsWith('::')) {\n        address += '0';\n      }\n      const _address = address.split(':');\n      _address[_address.indexOf('')] = unfold.repeat(9 - _address.length).slice(0, -1);\n      address = _address.join(':');\n    }\n    super(address);\n    this.port = obj.port;\n    this.family = obj.family;\n    this.address = address;\n  }\n  valueOf() {\n    return {\n      address: this.address,\n      family: this.family,\n      port: this.port\n    };\n  }\n  equals(other) {\n    if (!(other instanceof SocketAddress)) {\n      return false;\n    }\n    return this.family === other.family && this.port === other.port && this.address === other.address;\n  }\n  byteLen() {\n    return this.family === FamilyType.IPv4 ? 8 : 20;\n  }\n  writeTo(bufv) {\n    const address = this.address;\n    if (this.family === FamilyType.IPv4) {\n      bufv.walk(2);\n      bufv.buf.writeUInt16BE(0x02, bufv.start);\n      for (const val of address.split('.')) {\n        bufv.walk(1);\n        bufv.buf.writeUInt8(parseInt(val, 10), bufv.start);\n      }\n      bufv.walk(2);\n      bufv.buf.writeUInt16BE(this.port, bufv.start);\n    } else {\n      bufv.walk(2);\n      bufv.buf.writeUInt16BE(0x0a, bufv.start);\n      for (const val of address.split(':')) {\n        bufv.walk(2);\n        bufv.buf.writeUInt16BE(parseInt(val, 16), bufv.start);\n      }\n      bufv.walk(2);\n      bufv.buf.writeUInt16BE(this.port, bufv.start);\n    }\n    return bufv;\n  }\n  toString() {\n    return JSON.stringify(this.valueOf());\n  }\n}\nexports.SocketAddress = SocketAddress;\n/** QuicTags representing a QUIC tag. */\nclass QuicTags extends Protocol {\n  static fromBuffer(bufv) {\n    bufv.walk(4);\n    const tagName = bufv.buf.readUInt32BE(bufv.start);\n    const quicTag = new QuicTags(tagName);\n    bufv.walk(4);\n    if (bufv.isOutside()) {\n      throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n    }\n    let count = bufv.buf.readInt16LE(bufv.start);\n    const baseOffset = bufv.end + 8 * count;\n    const v2 = new common_1.Visitor(baseOffset);\n    while (count-- > 0) {\n      bufv.walk(4);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      const key = bufv.buf.readInt32BE(bufv.start);\n      bufv.walk(4);\n      v2.walk(0);\n      if (bufv.isOutside()) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      v2.end = baseOffset + bufv.buf.readInt32LE(bufv.start);\n      if (bufv.length < v2.end) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      const val = bufv.buf.slice(v2.start, v2.end);\n      quicTag.set(key, val);\n    }\n    bufv.reset(v2.end, v2.end);\n    return quicTag;\n  }\n  constructor(name) {\n    super(name);\n    this.name = name;\n    this.tags = new Map();\n  }\n  valueOf() {\n    const tags = {};\n    for (const [key, value] of this.tags) {\n      tags[Tag[key]] = value;\n    }\n    return {\n      name: Tag[this.name],\n      tags\n    };\n  }\n  get size() {\n    return this.tags.size;\n  }\n  [Symbol.iterator]() {\n    return this.tags[Symbol.iterator]();\n  }\n  set(key, val) {\n    this.tags.set(key, val);\n  }\n  get(key) {\n    return this.tags.get(key);\n  }\n  has(key) {\n    return this.tags.has(key);\n  }\n  equals(other) {\n    if (!(other instanceof QuicTags)) {\n      return false;\n    }\n    if (this.name !== other.name || this.tags.size !== other.tags.size) {\n      return false;\n    }\n    for (const key of this.tags.keys()) {\n      const a = this.tags.get(key);\n      const b = other.tags.get(key);\n      if (a == null || b == null || !a.equals(b)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  byteLen() {\n    let byteLen = 8;\n    for (const buf of this.tags.values()) {\n      byteLen += 8 + buf.length;\n    }\n    return byteLen;\n  }\n  writeTo(bufv) {\n    bufv.walk(4);\n    bufv.buf.writeUInt32BE(this.name, bufv.start);\n    bufv.walk(4);\n    const size = this.tags.size;\n    bufv.buf.writeUInt16LE(size, bufv.start);\n    bufv.buf.writeUInt16LE(0, bufv.start + 2);\n    let baseOffset = 0;\n    const v = new common_1.Visitor(bufv.end + 8 * size);\n    const keys = Array.from(this.tags.keys());\n    keys.sort((a, b) => a - b);\n    for (const key of keys) {\n      const val = this.tags.get(key);\n      if (val == null) {\n        throw new error_1.QuicError('QUIC_INTERNAL_ERROR');\n      }\n      bufv.walk(4);\n      bufv.buf.writeUInt32BE(key, bufv.start);\n      bufv.walk(4);\n      baseOffset += val.length;\n      bufv.buf.writeUInt32LE(baseOffset, bufv.start);\n      v.walk(val.length);\n      val.copy(bufv.buf, v.start, 0, val.length);\n    }\n    bufv.reset(v.end, v.end);\n    return bufv;\n  }\n  toString() {\n    return JSON.stringify(this.valueOf());\n  }\n}\nexports.QuicTags = QuicTags;\nvar Tag;\n(function (Tag) {\n  Tag[Tag[\"CHLO\"] = toTag('C', 'H', 'L', 'O')] = \"CHLO\";\n  Tag[Tag[\"SHLO\"] = toTag('S', 'H', 'L', 'O')] = \"SHLO\";\n  Tag[Tag[\"SCFG\"] = toTag('S', 'C', 'F', 'G')] = \"SCFG\";\n  Tag[Tag[\"REJ\"] = toTag('R', 'E', 'J', '\\u{0}')] = \"REJ\";\n  Tag[Tag[\"SREJ\"] = toTag('S', 'R', 'E', 'J')] = \"SREJ\";\n  Tag[Tag[\"CETV\"] = toTag('C', 'E', 'T', 'V')] = \"CETV\";\n  Tag[Tag[\"PRST\"] = toTag('P', 'R', 'S', 'T')] = \"PRST\";\n  Tag[Tag[\"SCUP\"] = toTag('S', 'C', 'U', 'P')] = \"SCUP\";\n  Tag[Tag[\"ALPN\"] = toTag('A', 'L', 'P', 'N')] = \"ALPN\";\n  // Key exchange methods\n  Tag[Tag[\"P256\"] = toTag('P', '2', '5', '6')] = \"P256\";\n  Tag[Tag[\"C255\"] = toTag('C', '2', '5', '5')] = \"C255\";\n  // AEAD algorithms\n  Tag[Tag[\"AESG\"] = toTag('A', 'E', 'S', 'G')] = \"AESG\";\n  Tag[Tag[\"CC20\"] = toTag('C', 'C', '2', '0')] = \"CC20\";\n  // Socket receive buffer\n  Tag[Tag[\"SRBF\"] = toTag('S', 'R', 'B', 'F')] = \"SRBF\";\n  // Congestion control feedback types\n  Tag[Tag[\"QBIC\"] = toTag('Q', 'B', 'I', 'C')] = \"QBIC\";\n  // Connection options (COPT) values\n  Tag[Tag[\"AFCW\"] = toTag('A', 'F', 'C', 'W')] = \"AFCW\";\n  Tag[Tag[\"IFW5\"] = toTag('I', 'F', 'W', '5')] = \"IFW5\";\n  Tag[Tag[\"IFW6\"] = toTag('I', 'F', 'W', '6')] = \"IFW6\";\n  Tag[Tag[\"IFW7\"] = toTag('I', 'F', 'W', '7')] = \"IFW7\";\n  Tag[Tag[\"IFW8\"] = toTag('I', 'F', 'W', '8')] = \"IFW8\";\n  Tag[Tag[\"IFW9\"] = toTag('I', 'F', 'W', '9')] = \"IFW9\";\n  Tag[Tag[\"IFWA\"] = toTag('I', 'F', 'W', 'a')] = \"IFWA\";\n  Tag[Tag[\"TBBR\"] = toTag('T', 'B', 'B', 'R')] = \"TBBR\";\n  Tag[Tag[\"1RTT\"] = toTag('1', 'R', 'T', 'T')] = \"1RTT\";\n  Tag[Tag[\"2RTT\"] = toTag('2', 'R', 'T', 'T')] = \"2RTT\";\n  Tag[Tag[\"LRTT\"] = toTag('L', 'R', 'T', 'T')] = \"LRTT\";\n  Tag[Tag[\"BBRR\"] = toTag('B', 'B', 'R', 'R')] = \"BBRR\";\n  Tag[Tag[\"BBR1\"] = toTag('B', 'B', 'R', '1')] = \"BBR1\";\n  Tag[Tag[\"BBR2\"] = toTag('B', 'B', 'R', '2')] = \"BBR2\";\n  Tag[Tag[\"RENO\"] = toTag('R', 'E', 'N', 'O')] = \"RENO\";\n  Tag[Tag[\"TPCC\"] = toTag('P', 'C', 'C', '\\u{0}')] = \"TPCC\";\n  Tag[Tag[\"BYTE\"] = toTag('B', 'Y', 'T', 'E')] = \"BYTE\";\n  Tag[Tag[\"IW03\"] = toTag('I', 'W', '0', '3')] = \"IW03\";\n  Tag[Tag[\"IW10\"] = toTag('I', 'W', '1', '0')] = \"IW10\";\n  Tag[Tag[\"IW20\"] = toTag('I', 'W', '2', '0')] = \"IW20\";\n  Tag[Tag[\"IW50\"] = toTag('I', 'W', '5', '0')] = \"IW50\";\n  Tag[Tag[\"1CON\"] = toTag('1', 'C', 'O', 'N')] = \"1CON\";\n  Tag[Tag[\"NTLP\"] = toTag('N', 'T', 'L', 'P')] = \"NTLP\";\n  Tag[Tag[\"NCON\"] = toTag('N', 'C', 'O', 'N')] = \"NCON\";\n  Tag[Tag[\"NRTO\"] = toTag('N', 'R', 'T', 'O')] = \"NRTO\";\n  Tag[Tag[\"UNDO\"] = toTag('U', 'N', 'D', 'O')] = \"UNDO\";\n  Tag[Tag[\"TIME\"] = toTag('T', 'I', 'M', 'E')] = \"TIME\";\n  Tag[Tag[\"ATIM\"] = toTag('A', 'T', 'I', 'M')] = \"ATIM\";\n  Tag[Tag[\"MIN1\"] = toTag('M', 'I', 'N', '1')] = \"MIN1\";\n  Tag[Tag[\"MIN4\"] = toTag('M', 'I', 'N', '4')] = \"MIN4\";\n  Tag[Tag[\"TLPR\"] = toTag('T', 'L', 'P', 'R')] = \"TLPR\";\n  Tag[Tag[\"ACKD\"] = toTag('A', 'C', 'K', 'D')] = \"ACKD\";\n  Tag[Tag[\"AKD2\"] = toTag('A', 'K', 'D', '2')] = \"AKD2\";\n  Tag[Tag[\"AKD3\"] = toTag('A', 'K', 'D', '3')] = \"AKD3\";\n  Tag[Tag[\"AKD4\"] = toTag('A', 'K', 'D', '4')] = \"AKD4\";\n  Tag[Tag[\"AKDU\"] = toTag('A', 'K', 'D', 'U')] = \"AKDU\";\n  Tag[Tag[\"SSLR\"] = toTag('S', 'S', 'L', 'R')] = \"SSLR\";\n  Tag[Tag[\"NPRR\"] = toTag('N', 'P', 'R', 'R')] = \"NPRR\";\n  Tag[Tag[\"5RTO\"] = toTag('5', 'R', 'T', 'O')] = \"5RTO\";\n  Tag[Tag[\"3RTO\"] = toTag('3', 'R', 'T', 'O')] = \"3RTO\";\n  Tag[Tag[\"CTIM\"] = toTag('C', 'T', 'I', 'M')] = \"CTIM\";\n  Tag[Tag[\"DHDT\"] = toTag('D', 'H', 'D', 'T')] = \"DHDT\";\n  Tag[Tag[\"CONH\"] = toTag('C', 'O', 'N', 'H')] = \"CONH\";\n  Tag[Tag[\"LFAK\"] = toTag('L', 'F', 'A', 'K')] = \"LFAK\";\n  // TODO(fayang): Remove this connection option in QUIC_VERSION_37, in which\n  // MAX_HEADER_LIST_SIZE settings frame should be supported.\n  Tag[Tag[\"SMHL\"] = toTag('S', 'M', 'H', 'L')] = \"SMHL\";\n  Tag[Tag[\"CCVX\"] = toTag('C', 'C', 'V', 'X')] = \"CCVX\";\n  Tag[Tag[\"CBQT\"] = toTag('C', 'B', 'Q', 'T')] = \"CBQT\";\n  Tag[Tag[\"BLMX\"] = toTag('B', 'L', 'M', 'X')] = \"BLMX\";\n  Tag[Tag[\"CPAU\"] = toTag('C', 'P', 'A', 'U')] = \"CPAU\";\n  Tag[Tag[\"NSTP\"] = toTag('N', 'S', 'T', 'P')] = \"NSTP\";\n  // Optional support of truncated Connection IDs.  If sent by a peer, the value\n  // is the minimum number of bytes allowed for the connection ID sent to the\n  // peer.\n  Tag[Tag[\"TCID\"] = toTag('T', 'C', 'I', 'D')] = \"TCID\";\n  // Multipath option.\n  Tag[Tag[\"MPTH\"] = toTag('M', 'P', 'T', 'H')] = \"MPTH\";\n  Tag[Tag[\"NCMR\"] = toTag('N', 'C', 'M', 'R')] = \"NCMR\";\n  // Enable bandwidth resumption experiment.\n  Tag[Tag[\"BWRE\"] = toTag('B', 'W', 'R', 'E')] = \"BWRE\";\n  Tag[Tag[\"BWMX\"] = toTag('B', 'W', 'M', 'X')] = \"BWMX\";\n  Tag[Tag[\"BWRS\"] = toTag('B', 'W', 'R', 'S')] = \"BWRS\";\n  Tag[Tag[\"BWS2\"] = toTag('B', 'W', 'S', '2')] = \"BWS2\";\n  // Enable path MTU discovery experiment.\n  Tag[Tag[\"MTUH\"] = toTag('M', 'T', 'U', 'H')] = \"MTUH\";\n  Tag[Tag[\"MTUL\"] = toTag('M', 'T', 'U', 'L')] = \"MTUL\";\n  // Tags for async signing experiments\n  Tag[Tag[\"ASYN\"] = toTag('A', 'S', 'Y', 'N')] = \"ASYN\";\n  Tag[Tag[\"SYNC\"] = toTag('S', 'Y', 'N', 'C')] = \"SYNC\";\n  Tag[Tag[\"FHL2\"] = toTag('F', 'H', 'L', '2')] = \"FHL2\";\n  // Proof types (i.e. certificate types)\n  // NOTE: although it would be silly to do so, specifying both kX509 and kX59R\n  // is allowed and is equivalent to specifying only kX509.\n  Tag[Tag[\"X509\"] = toTag('X', '5', '0', '9')] = \"X509\";\n  Tag[Tag[\"X59R\"] = toTag('X', '5', '9', 'R')] = \"X59R\";\n  Tag[Tag[\"CHID\"] = toTag('C', 'H', 'I', 'D')] = \"CHID\";\n  // Client hello tags\n  Tag[Tag[\"VER\"] = toTag('V', 'E', 'R', '\\u{0}')] = \"VER\";\n  Tag[Tag[\"NONC\"] = toTag('N', 'O', 'N', 'C')] = \"NONC\";\n  Tag[Tag[\"NONP\"] = toTag('N', 'O', 'N', 'P')] = \"NONP\";\n  Tag[Tag[\"KEXS\"] = toTag('K', 'E', 'X', 'S')] = \"KEXS\";\n  Tag[Tag[\"AEAD\"] = toTag('A', 'E', 'A', 'D')] = \"AEAD\";\n  Tag[Tag[\"COPT\"] = toTag('C', 'O', 'P', 'T')] = \"COPT\";\n  Tag[Tag[\"CLOP\"] = toTag('C', 'L', 'O', 'P')] = \"CLOP\";\n  Tag[Tag[\"ICSL\"] = toTag('I', 'C', 'S', 'L')] = \"ICSL\";\n  Tag[Tag[\"SCLS\"] = toTag('S', 'C', 'L', 'S')] = \"SCLS\";\n  Tag[Tag[\"MSPC\"] = toTag('M', 'S', 'P', 'C')] = \"MSPC\";\n  Tag[Tag[\"MIDS\"] = toTag('M', 'I', 'D', 'S')] = \"MIDS\";\n  Tag[Tag[\"IRTT\"] = toTag('I', 'R', 'T', 'T')] = \"IRTT\";\n  Tag[Tag[\"SWND\"] = toTag('S', 'W', 'N', 'D')] = \"SWND\";\n  Tag[Tag[\"SNI\"] = toTag('S', 'N', 'I', '\\u{0}')] = \"SNI\";\n  Tag[Tag[\"PUBS\"] = toTag('P', 'U', 'B', 'S')] = \"PUBS\";\n  Tag[Tag[\"SCID\"] = toTag('S', 'C', 'I', 'D')] = \"SCID\";\n  Tag[Tag[\"ORBT\"] = toTag('O', 'B', 'I', 'T')] = \"ORBT\";\n  Tag[Tag[\"PDMD\"] = toTag('P', 'D', 'M', 'D')] = \"PDMD\";\n  Tag[Tag[\"PROF\"] = toTag('P', 'R', 'O', 'F')] = \"PROF\";\n  Tag[Tag[\"CCS\"] = toTag('C', 'C', 'S', '\\u{0}')] = \"CCS\";\n  Tag[Tag[\"CCRT\"] = toTag('C', 'C', 'R', 'T')] = \"CCRT\";\n  Tag[Tag[\"EXPY\"] = toTag('E', 'X', 'P', 'Y')] = \"EXPY\";\n  Tag[Tag[\"STTL\"] = toTag('S', 'T', 'T', 'L')] = \"STTL\";\n  Tag[Tag[\"SFCW\"] = toTag('S', 'F', 'C', 'W')] = \"SFCW\";\n  Tag[Tag[\"CFCW\"] = toTag('C', 'F', 'C', 'W')] = \"CFCW\";\n  Tag[Tag[\"UAID\"] = toTag('U', 'A', 'I', 'D')] = \"UAID\";\n  Tag[Tag[\"XLCT\"] = toTag('X', 'L', 'C', 'T')] = \"XLCT\";\n  Tag[Tag[\"TBKP\"] = toTag('T', 'B', 'K', 'P')] = \"TBKP\";\n  // Token Binding tags\n  Tag[Tag[\"TB10\"] = toTag('T', 'B', '1', '0')] = \"TB10\";\n  // Rejection tags\n  Tag[Tag[\"RREJ\"] = toTag('R', 'R', 'E', 'J')] = \"RREJ\";\n  // Stateless Reject tags\n  Tag[Tag[\"RCID\"] = toTag('R', 'C', 'I', 'D')] = \"RCID\";\n  // Server hello tags\n  Tag[Tag[\"CADR\"] = toTag('C', 'A', 'D', 'R')] = \"CADR\";\n  Tag[Tag[\"ASAD\"] = toTag('A', 'S', 'A', 'D')] = \"ASAD\";\n  // CETV tags\n  Tag[Tag[\"CIDK\"] = toTag('C', 'I', 'D', 'K')] = \"CIDK\";\n  Tag[Tag[\"CIDS\"] = toTag('C', 'I', 'D', 'S')] = \"CIDS\";\n  // Public reset tags\n  Tag[Tag[\"RNON\"] = toTag('R', 'N', 'O', 'N')] = \"RNON\";\n  Tag[Tag[\"RSEQ\"] = toTag('R', 'S', 'E', 'Q')] = \"RSEQ\";\n  // Universal tags\n  Tag[Tag[\"PAD\"] = toTag('P', 'A', 'D', '\\u{0}')] = \"PAD\";\n  // Server push tags\n  Tag[Tag[\"SPSH\"] = toTag('S', 'P', 'S', 'H')] = \"SPSH\";\n  // clang-format on\n  // These tags have a special form so that they appear either at the beginning\n  // or the end of a handshake message. Since handshake messages are sorted by\n  // tag value, the tags with 0 at the end will sort first and those with 255 at\n  // the end will sort last.\n  //\n  // The certificate chain should have a tag that will cause it to be sorted at\n  // the end of any handshake messages because it's likely to be large and the\n  // client might be able to get everything that it needs from the small values at\n  // the beginning.\n  //\n  // Likewise tags with random values should be towards the beginning of the\n  // message because the server mightn't hold state for a rejected client hello\n  // and therefore the client may have issues reassembling the rejection message\n  // in the event that it sent two client hellos.\n  Tag[Tag[\"SNO\"] = toTag('S', 'N', 'O', '\\u{0}')] = \"SNO\";\n  Tag[Tag[\"STK\"] = toTag('S', 'T', 'K', '\\u{0}')] = \"STK\";\n  Tag[Tag[\"CRT\"] = toTag('C', 'R', 'T', '\\u{ff}')] = \"CRT\";\n  Tag[Tag[\"CSCT\"] = toTag('C', 'S', 'C', 'T')] = \"CSCT\";\n})(Tag = exports.Tag || (exports.Tag = {}));\nfunction toTag(a, b, c, d) {\n  return a.charCodeAt(0) * (0xffffff + 1) + b.charCodeAt(0) * (0xffff + 1) + c.charCodeAt(0) * (0xff + 1) + d.charCodeAt(0);\n}\nfunction isAddress(address) {\n  return address != null && address.port >= 0 && Number.isInteger(address.port) && typeof address.address === 'string' && (address.family === FamilyType.IPv4 || address.family === FamilyType.IPv6);\n}","map":{"version":3,"names":["util_1","require","crypto_1","error_1","symbol_1","common_1","QUIC_VERSIONS","SessionType","exports","FamilyType","getVersion","getVersions","slice","chooseVersion","theirs","v","isSupportedVersion","version","includes","Protocol","fromBuffer","_bufv","_len","Error","constructor","val","kVal","inspect","custom","_depth","_options","name","toString","ConnectionIDReg","ConnectionID","bufv","walk","isOutside","QuicError","buf","start","end","random","randomBytes","id","test","valueOf","equals","other","byteLen","writeTo","write","PacketNumber","flagToByteLen","flagBits","len","readUIntBE","Number","isInteger","nextNumber","prevNumber","isLimitReached","delta","Math","abs","closestTo","a","b","isFull","value","writeUIntBE","String","StreamID","nextID","prevID","Offset","readUnsafeUInt","offset","isSafeInteger","gt","writeUnsafeUInt","SocketAddress","obj","address","family","IPv4","port","readUInt16BE","readUInt8","join","IPv6","isAddress","JSON","stringify","unfold","startsWith","endsWith","_address","split","indexOf","repeat","length","writeUInt16BE","writeUInt8","parseInt","QuicTags","tagName","readUInt32BE","quicTag","count","readInt16LE","baseOffset","v2","Visitor","key","readInt32BE","readInt32LE","set","reset","tags","Map","Tag","size","Symbol","iterator","get","has","keys","values","writeUInt32BE","writeUInt16LE","Array","from","sort","writeUInt32LE","copy","toTag","c","d","charCodeAt"],"sources":["../../src/internal/protocol.ts"],"sourcesContent":[null],"mappings":"AAAA,YAAY;;;;;AACZ;AACA;AACA;AAEA,MAAAA,MAAA,GAAAC,OAAA;AACA,MAAAC,QAAA,GAAAD,OAAA;AAEA,MAAAE,OAAA,GAAAF,OAAA;AAEA,MAAAG,QAAA,GAAAH,OAAA;AACA,MAAAI,QAAA,GAAAJ,OAAA;AAEA,MAAMK,aAAa,GAAG,CAAC,MAAM,CAAC;AAE9B,IAAYC,WAGX;AAHD,WAAYA,WAAW;EACrBA,WAAA,CAAAA,WAAA,0BAAU;EACVA,WAAA,CAAAA,WAAA,0BAAU;AACZ,CAAC,EAHWA,WAAW,GAAXC,OAAA,CAAAD,WAAW,KAAXC,OAAA,CAAAD,WAAW;AAKvB,IAAYE,UAGX;AAHD,WAAYA,UAAU;EACpBA,UAAA,iBAAa;EACbA,UAAA,iBAAa;AACf,CAAC,EAHWA,UAAU,GAAVD,OAAA,CAAAC,UAAU,KAAVD,OAAA,CAAAC,UAAU;AAKtB;;;AAGA,SAAAC,WAAA;EACE,OAAOJ,aAAa,CAAC,CAAC,CAAC;AACzB;AAFAE,OAAA,CAAAE,UAAA,GAAAA,UAAA;AAIA;;;AAGA,SAAAC,YAAA;EACE,OAAOL,aAAa,CAACM,KAAK,EAAE;AAC9B;AAFAJ,OAAA,CAAAG,WAAA,GAAAA,WAAA;AAIA;;;AAGA,SAAAE,cAA+BC,MAAgB;EAC7C,KAAK,MAAMC,CAAC,IAAID,MAAM,EAAE;IACtB,IAAIE,kBAAkB,CAACD,CAAC,CAAC,EAAE;MACzB,OAAOA,CAAC;;;EAGZ,OAAO,EAAE;AACX;AAPAP,OAAA,CAAAK,aAAA,GAAAA,aAAA;AASA;;;AAGA,SAAAG,mBAAoCC,OAAe;EACjD,OAAOX,aAAa,CAACY,QAAQ,CAACD,OAAO,CAAC;AACxC;AAFAT,OAAA,CAAAQ,kBAAA,GAAAA,kBAAA;AAIA;AACA,MAAAG,QAAA;EACE,OAAOC,UAAUA,CAAEC,KAAoB,EAAEC,IAAa;IACpD,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EAGAC,YAAaC,GAAQ;IACnB,IAAI,CAACrB,QAAA,CAAAsB,IAAI,CAAC,GAAGD,GAAG;EAClB;EAQA,CAACzB,MAAA,CAAA2B,OAAO,CAACC,MAAM,EAAGC,MAAW,EAAEC,QAAa;IAC1C,OAAO,IAAI,IAAI,CAACN,WAAW,CAACO,IAAI,IAAI,IAAI,CAACC,QAAQ,EAAE,GAAG;EACxD;;AAlBFxB,OAAA,CAAAW,QAAA,GAAAA,QAAA;AAqBA,MAAMc,eAAe,GAAG,gBAAgB;AACxC;AACA,MAAAC,YAA0B,SAAQf,QAAQ;EACxC,OAAOC,UAAUA,CAAEe,IAAmB;IACpCA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5C,OAAO,IAAIJ,YAAY,CAACC,IAAI,CAACI,GAAG,CAACP,QAAQ,CAAC,KAAK,EAAEG,IAAI,CAACK,KAAK,EAAEL,IAAI,CAACM,GAAG,CAAC,CAAC;EACzE;EAEA,OAAOC,MAAMA,CAAA;IACX,OAAO,IAAIR,YAAY,CAAChC,QAAA,CAAAyC,WAAW,CAAC,CAAC,CAAC,CAACX,QAAQ,CAAC,KAAK,CAAC,CAAC;EACzD;EAEAR,YAAaoB,EAAU;IACrB,IAAI,CAACX,eAAe,CAACY,IAAI,CAACD,EAAE,CAAC,EAAE;MAC7B,MAAM,IAAIrB,KAAK,CAAC,uBAAuB,CAAC;;IAE1C,KAAK,CAACqB,EAAE,CAAC;EACX;EAEA;;;EAGAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC1C,QAAA,CAAAsB,IAAI,CAAC;EACnB;EAEAqB,MAAMA,CAAEC,KAAmB;IACzB,OAAQA,KAAK,YAAYd,YAAY,IAAK,IAAI,CAACY,OAAO,EAAE,KAAKE,KAAK,CAACF,OAAO,EAAE;EAC9E;EAEAG,OAAOA,CAAA;IACL,OAAO,CAAC;EACV;EAEAC,OAAOA,CAAEf,IAAmB;IAC1BA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZD,IAAI,CAACI,GAAG,CAACY,KAAK,CAAC,IAAI,CAAC/C,QAAA,CAAAsB,IAAI,CAAC,EAAES,IAAI,CAACK,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC;IAChD,OAAOL,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAO,IAAI,CAAC5B,QAAA,CAAAsB,IAAI,CAAC;EACnB;;AA3CFlB,OAAA,CAAA0B,YAAA,GAAAA,YAAA;AA8CA;AACA,MAAAkB,YAA0B,SAAQjC,QAAQ;EACxC;EACA;EACA;EACA;EACA;EACA;EACA,OAAOkC,aAAaA,CAAEC,QAAgB;IACpC,IAAI,CAACA,QAAQ,GAAG,IAAI,MAAMA,QAAQ,EAAE;MAClC,MAAM,IAAI/B,KAAK,CAAC,kBAAkB,CAAC;;IAErC,OAAO+B,QAAQ,GAAG,CAAC,GAAIA,QAAQ,GAAG,CAAC,GAAI,CAAC;EAC1C;EAEA,OAAOlC,UAAUA,CAAEe,IAAmB,EAAEoB,GAAW;IACjDpB,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACd,IAAIpB,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5C,OAAO,IAAIc,YAAY,CAACjB,IAAI,CAACI,GAAG,CAACiB,UAAU,CAACrB,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC,CAAC;EAC/D;EAEA/B,YAAaC,GAAW;IACtB,IAAI,CAACgC,MAAM,CAACC,SAAS,CAACjC,GAAG,CAAC,IAAIA,GAAG,GAAG,CAAC,IAAIA,GAAG,GAAG,cAAc,EAAE;MAC7D,MAAM,IAAIF,KAAK,CAAC,4BAA4BE,GAAG,EAAE,CAAC;;IAGpD,KAAK,CAACA,GAAG,CAAC;EACZ;EAEAqB,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC1C,QAAA,CAAAsB,IAAI,CAAC;EACnB;EAEAiC,UAAUA,CAAA;IACR,OAAO,IAAIP,YAAY,CAAC,IAAI,CAAChD,QAAA,CAAAsB,IAAI,CAAC,GAAG,CAAC,CAAC;EACzC;EAEAkC,UAAUA,CAAA;IACR,OAAO,IAAIR,YAAY,CAAC,IAAI,CAAChD,QAAA,CAAAsB,IAAI,CAAC,GAAG,CAAC,CAAC;EACzC;EAEAmC,cAAcA,CAAA;IACZ;IACA;IACA;IACA,OAAO,IAAI,CAACzD,QAAA,CAAAsB,IAAI,CAAC,IAAI,cAAc,EAAC;EACtC;EAEAoC,KAAKA,CAAEd,KAAmB;IACxB,OAAOe,IAAI,CAACC,GAAG,CAAC,IAAI,CAAClB,OAAO,EAAE,GAAGE,KAAK,CAACF,OAAO,EAAE,CAAC;EACnD;EAEAmB,SAASA,CAAEC,CAAe,EAAEC,CAAe;IACzC,OAAO,IAAI,CAACL,KAAK,CAACI,CAAC,CAAC,GAAG,IAAI,CAACJ,KAAK,CAACK,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAAC;EAC9C;EAEAb,QAAQA,CAAA;IACN,MAAML,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;IAC9B,IAAIA,OAAO,KAAK,CAAC,EAAE;MACjB,OAAO,CAAC;;IAEV,OAAOA,OAAO,GAAG,CAAC;EACpB;EAEAF,MAAMA,CAAEC,KAAmB;IACzB,OAAQA,KAAK,YAAYI,YAAY,IAAK,IAAI,CAACN,OAAO,EAAE,KAAKE,KAAK,CAACF,OAAO,EAAE;EAC9E;EAEAG,OAAOA,CAAEmB,MAAA,GAAkB,KAAK;IAC9B,IAAI,CAACA,MAAM,EAAE;MACX,MAAMC,KAAK,GAAG,IAAI,CAACjE,QAAA,CAAAsB,IAAI,CAAC;MACxB,IAAI2C,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,MAAM,EAAE;QAC1B,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,UAAU,EAAE;QAC9B,OAAO,CAAC;;;IAGZ,OAAO,CAAC;EACV;EAEAnB,OAAOA,CAAEf,IAAmB,EAAEiC,MAAA,GAAkB,KAAK;IACnD,MAAMb,GAAG,GAAGa,MAAM,GAAG,CAAC,GAAG,IAAI,CAACnB,OAAO,EAAE;IACvCd,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACdpB,IAAI,CAACI,GAAG,CAAC+B,WAAW,CAAC,IAAI,CAAClE,QAAA,CAAAsB,IAAI,CAAC,EAAES,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC;IACjD,OAAOpB,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAOuC,MAAM,CAAC,IAAI,CAACnE,QAAA,CAAAsB,IAAI,CAAC,CAAC;EAC3B;;AA5FFlB,OAAA,CAAA4C,YAAA,GAAAA,YAAA;AA+FA;AACA,MAAAoB,QAAsB,SAAQrD,QAAQ;EACpC;EACA;EACA;EAEA;;;EAGA,OAAOkC,aAAaA,CAAEC,QAAgB;IACpC,IAAI,CAACA,QAAQ,GAAG,IAAI,MAAMA,QAAQ,EAAE;MAClC,MAAM,IAAI/B,KAAK,CAAC,kBAAkB,CAAC;;IAErC,OAAO+B,QAAQ,GAAG,CAAC;EACrB;EAEA,OAAOlC,UAAUA,CAAEe,IAAmB,EAAEoB,GAAW;IACjDpB,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACd,IAAIpB,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,0BAA0B,CAAC;;IAEjD,OAAO,IAAIkC,QAAQ,CAACrC,IAAI,CAACI,GAAG,CAACiB,UAAU,CAACrB,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC,CAAC;EAC3D;EAEA/B,YAAaoB,EAAU;IACrB;IACA,IAAI,CAACa,MAAM,CAACC,SAAS,CAACd,EAAE,CAAC,IAAIA,EAAE,GAAG,CAAC,IAAIA,EAAE,GAAG,UAAU,EAAE;MACtD,MAAM,IAAIrB,KAAK,CAAC,qBAAqBqB,EAAE,EAAE,CAAC;;IAE5C,KAAK,CAACA,EAAE,CAAC;EACX;EAEAE,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC1C,QAAA,CAAAsB,IAAI,CAAC;EACnB;EAEA4B,QAAQA,CAAA;IACN,OAAO,IAAI,CAACL,OAAO,EAAE,GAAG,CAAC;EAC3B;EAEAwB,MAAMA,CAAA;IACJ,MAAMJ,KAAK,GAAG,IAAI,CAACjE,QAAA,CAAAsB,IAAI,CAAC,GAAG,CAAC;IAC5B,OAAO,IAAI8C,QAAQ,CAACH,KAAK,IAAI,UAAU,GAAGA,KAAK,GAAIA,KAAK,GAAG,UAAW,CAAC;EACzE;EAEAK,MAAMA,CAAA;IACJ,OAAO,IAAIF,QAAQ,CAAC,IAAI,CAACpE,QAAA,CAAAsB,IAAI,CAAC,GAAG,CAAC,CAAC;EACrC;EAEAqB,MAAMA,CAAEC,KAAe;IACrB,OAAQA,KAAK,YAAYwB,QAAQ,IAAK,IAAI,CAAC1B,OAAO,EAAE,KAAKE,KAAK,CAACF,OAAO,EAAE;EAC1E;EAEAG,OAAOA,CAAEmB,MAAA,GAAkB,KAAK;IAC9B,IAAI,CAACA,MAAM,EAAE;MACX,MAAMC,KAAK,GAAG,IAAI,CAACjE,QAAA,CAAAsB,IAAI,CAAC;MACxB,IAAI2C,KAAK,IAAI,IAAI,EAAE;QACjB,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,MAAM,EAAE;QAC1B,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,QAAQ,EAAE;QAC5B,OAAO,CAAC;;;IAGZ,OAAO,CAAC;EACV;EAEAnB,OAAOA,CAAEf,IAAmB,EAAEiC,MAAA,GAAkB,KAAK;IACnD,MAAMb,GAAG,GAAGa,MAAM,GAAG,CAAC,GAAG,IAAI,CAACnB,OAAO,EAAE;IACvCd,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACdpB,IAAI,CAACI,GAAG,CAAC+B,WAAW,CAAC,IAAI,CAAClE,QAAA,CAAAsB,IAAI,CAAC,EAAES,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC;IACjD,OAAOpB,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAOuC,MAAM,CAAC,IAAI,CAACnE,QAAA,CAAAsB,IAAI,CAAC,CAAC;EAC3B;;AA3EFlB,OAAA,CAAAgE,QAAA,GAAAA,QAAA;AA8EA;AACA,MAAAG,MAAoB,SAAQxD,QAAQ;EAClC;;;EAGA,OAAOkC,aAAaA,CAAEC,QAAgB;IACpC,IAAI,CAACA,QAAQ,GAAG,KAAK,MAAMA,QAAQ,EAAE;MACnC,MAAM,IAAI/B,KAAK,CAAC,kBAAkB,CAAC;;IAErC,OAAO+B,QAAQ,GAAG,CAAC,GAAIA,QAAQ,GAAG,CAAC,GAAI,CAAC;EAC1C;EAEA,OAAOlC,UAAUA,CAAEe,IAAmB,EAAEoB,GAAW;IACjDpB,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACd,IAAIpB,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5C,OAAO,IAAIqC,MAAM,CAACtE,QAAA,CAAAuE,cAAc,CAACzC,IAAI,CAACI,GAAG,EAAEJ,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC,CAAC;EAC9D;EAEA/B,YAAaqD,MAAc;IACzB,IAAI,CAACpB,MAAM,CAACqB,aAAa,CAACD,MAAM,CAAC,IAAIA,MAAM,GAAG,CAAC,EAAE;MAC/C,MAAM,IAAItD,KAAK,CAAC,kBAAkBsD,MAAM,EAAE,CAAC;;IAE7C,KAAK,CAACA,MAAM,CAAC;EACf;EAEA/B,OAAOA,CAAA;IACL,OAAO,IAAI,CAAC1C,QAAA,CAAAsB,IAAI,CAAC;EACnB;EAEAqB,MAAMA,CAAEC,KAAa;IACnB,OAAO,IAAI,CAACF,OAAO,EAAE,KAAKE,KAAK,CAACF,OAAO,EAAE;EAC3C;EAEAiC,EAAEA,CAAE/B,KAAa;IACf,OAAO,IAAI,CAACF,OAAO,EAAE,GAAGE,KAAK,CAACF,OAAO,EAAE;EACzC;EAEAG,OAAOA,CAAEmB,MAAA,GAAkB,KAAK;IAC9B,IAAI,CAACA,MAAM,EAAE;MACX,MAAMC,KAAK,GAAG,IAAI,CAACjE,QAAA,CAAAsB,IAAI,CAAC;MACxB,IAAI2C,KAAK,KAAK,CAAC,EAAE;QACf,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,MAAM,EAAE;QAC1B,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,QAAQ,EAAE;QAC5B,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,UAAU,EAAE;QAC9B,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,YAAY,EAAE;QAChC,OAAO,CAAC;OACT,MAAM,IAAIA,KAAK,IAAI,cAAc,EAAE;QAClC,OAAO,CAAC;;MAEV,OAAO,CAAC,EAAC;;IAEX,OAAO,CAAC;EACV;EAEA;;;EAGAf,QAAQA,CAAA;IACN,MAAML,OAAO,GAAG,IAAI,CAACA,OAAO,EAAE;IAC9B,IAAIA,OAAO,KAAK,CAAC,EAAE;MACjB,OAAO,CAAC;;IAEV,OAAOA,OAAO,GAAG,CAAC,GAAIA,OAAO,GAAG,CAAC,GAAI,CAAC;EACxC;EAEAC,OAAOA,CAAEf,IAAmB,EAAEiC,MAAA,GAAkB,KAAK;IACnD,MAAMb,GAAG,GAAGa,MAAM,GAAG,CAAC,GAAG,IAAI,CAACnB,OAAO,EAAE;IACvCd,IAAI,CAACC,IAAI,CAACmB,GAAG,CAAC;IACd,IAAIpB,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5CjC,QAAA,CAAA2E,eAAe,CAAC7C,IAAI,CAACI,GAAG,EAAE,IAAI,CAACnC,QAAA,CAAAsB,IAAI,CAAC,EAAES,IAAI,CAACK,KAAK,EAAEe,GAAG,CAAC;IACtD,OAAOpB,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAOuC,MAAM,CAAC,IAAI,CAACnE,QAAA,CAAAsB,IAAI,CAAC,CAAC;EAC3B;;AAlFFlB,OAAA,CAAAmE,MAAA,GAAAA,MAAA;AAqFA;AACA,MAAAM,aAA2B,SAAQ9D,QAAQ;EACzC,OAAOC,UAAUA,CAAEe,IAAmB;IACpC,MAAM+C,GAAG,GAAgB;MACvBC,OAAO,EAAE,EAAE;MACXC,MAAM,EAAE3E,UAAU,CAAC4E,IAAI;MACvBC,IAAI,EAAE;KACP;IAEDnD,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5C,MAAM8C,MAAM,GAAGjD,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,CAAC;IAChD,IAAI4C,MAAM,KAAK,IAAI,EAAE;MACnBF,GAAG,CAACE,MAAM,GAAG3E,UAAU,CAAC4E,IAAI;MAC5BlD,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C4C,GAAG,CAACC,OAAO,GAAG,CACZhD,IAAI,CAACI,GAAG,CAACiD,SAAS,CAACrD,IAAI,CAACK,KAAK,CAAC,EAC9BL,IAAI,CAACI,GAAG,CAACiD,SAAS,CAACrD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,EAClCL,IAAI,CAACI,GAAG,CAACiD,SAAS,CAACrD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,EAClCL,IAAI,CAACI,GAAG,CAACiD,SAAS,CAACrD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,CACnC,CAACiD,IAAI,CAAC,GAAG,CAAC;MACXtD,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C4C,GAAG,CAACI,IAAI,GAAGnD,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,CAAC;KAC7C,MAAM,IAAI4C,MAAM,KAAK,IAAI,EAAE;MAC1BF,GAAG,CAACE,MAAM,GAAG3E,UAAU,CAACiF,IAAI;MAC5BvD,IAAI,CAACC,IAAI,CAAC,EAAE,CAAC;MACb,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C4C,GAAG,CAACC,OAAO,GAAG,CACZhD,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EAC9CG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EAClDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EAClDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EAClDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EAClDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,EAAE,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EACnDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,EAAE,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,EACnDG,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,GAAG,EAAE,CAAC,CAACR,QAAQ,CAAC,EAAE,CAAC,CACpD,CAACyD,IAAI,CAAC,GAAG,CAAC;MACXtD,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C4C,GAAG,CAACI,IAAI,GAAGnD,IAAI,CAACI,GAAG,CAACgD,YAAY,CAACpD,IAAI,CAACK,KAAK,CAAC;KAC7C,MAAM;MACL,MAAM,IAAIjB,KAAK,CAAC,8BAA8B,CAAC;;IAEjD,OAAO,IAAI0D,aAAa,CAACC,GAAG,CAAC;EAC/B;EAKA1D,YAAa0D,GAAgB;IAC3B,IAAI,CAACS,SAAS,CAACT,GAAG,CAAC,EAAE;MACnB,MAAM,IAAI3D,KAAK,CAAC,0BAA0BqE,IAAI,CAACC,SAAS,CAACX,GAAG,CAAC,EAAE,CAAC;;IAGlE,IAAIC,OAAO,GAAGD,GAAG,CAACC,OAAO;IACzB,IAAIA,OAAO,CAACjE,QAAQ,CAAC,IAAI,CAAC,EAAE;MAC1B,MAAM4E,MAAM,GAAG,IAAI;MACnB,IAAIX,OAAO,CAACY,UAAU,CAAC,IAAI,CAAC,EAAE;QAC5BZ,OAAO,GAAG,GAAG,GAAGA,OAAO;OACxB,MAAM,IAAIA,OAAO,CAACa,QAAQ,CAAC,IAAI,CAAC,EAAE;QACjCb,OAAO,IAAI,GAAG;;MAEhB,MAAMc,QAAQ,GAAGd,OAAO,CAACe,KAAK,CAAC,GAAG,CAAC;MACnCD,QAAQ,CAACA,QAAQ,CAACE,OAAO,CAAC,EAAE,CAAC,CAAC,GAAGL,MAAM,CAACM,MAAM,CAAC,CAAC,GAAGH,QAAQ,CAACI,MAAM,CAAC,CAACzF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAChFuE,OAAO,GAAGc,QAAQ,CAACR,IAAI,CAAC,GAAG,CAAC;;IAG9B,KAAK,CAACN,OAAO,CAAC;IAEd,IAAI,CAACG,IAAI,GAAGJ,GAAG,CAACI,IAAI;IACpB,IAAI,CAACF,MAAM,GAAGF,GAAG,CAACE,MAAoB;IACtC,IAAI,CAACD,OAAO,GAAGA,OAAO;EACxB;EAEArC,OAAOA,CAAA;IACL,OAAO;MACLqC,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBC,MAAM,EAAE,IAAI,CAACA,MAAgB;MAC7BE,IAAI,EAAE,IAAI,CAACA;KACZ;EACH;EAEAvC,MAAMA,CAAEC,KAAoB;IAC1B,IAAI,EAAEA,KAAK,YAAYiC,aAAa,CAAC,EAAE;MACrC,OAAO,KAAK;;IAEd,OAAO,IAAI,CAACG,MAAM,KAAKpC,KAAK,CAACoC,MAAM,IAAI,IAAI,CAACE,IAAI,KAAKtC,KAAK,CAACsC,IAAI,IAAI,IAAI,CAACH,OAAO,KAAKnC,KAAK,CAACmC,OAAO;EACnG;EAEAlC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACmC,MAAM,KAAK3E,UAAU,CAAC4E,IAAI,GAAG,CAAC,GAAG,EAAE;EACjD;EAEAnC,OAAOA,CAAEf,IAAmB;IAC1B,MAAMgD,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,IAAI,IAAI,CAACC,MAAM,KAAK3E,UAAU,CAAC4E,IAAI,EAAE;MACnClD,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZD,IAAI,CAACI,GAAG,CAAC+D,aAAa,CAAC,IAAI,EAAEnE,IAAI,CAACK,KAAK,CAAC;MACxC,KAAK,MAAMf,GAAG,IAAI0D,OAAO,CAACe,KAAK,CAAC,GAAG,CAAC,EAAE;QACpC/D,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACZD,IAAI,CAACI,GAAG,CAACgE,UAAU,CAACC,QAAQ,CAAC/E,GAAG,EAAE,EAAE,CAAC,EAAEU,IAAI,CAACK,KAAK,CAAC;;MAEpDL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZD,IAAI,CAACI,GAAG,CAAC+D,aAAa,CAAC,IAAI,CAAChB,IAAI,EAAEnD,IAAI,CAACK,KAAK,CAAC;KAC9C,MAAM;MACLL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZD,IAAI,CAACI,GAAG,CAAC+D,aAAa,CAAC,IAAI,EAAEnE,IAAI,CAACK,KAAK,CAAC;MACxC,KAAK,MAAMf,GAAG,IAAI0D,OAAO,CAACe,KAAK,CAAC,GAAG,CAAC,EAAE;QACpC/D,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;QACZD,IAAI,CAACI,GAAG,CAAC+D,aAAa,CAACE,QAAQ,CAAC/E,GAAG,EAAE,EAAE,CAAC,EAAEU,IAAI,CAACK,KAAK,CAAC;;MAEvDL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZD,IAAI,CAACI,GAAG,CAAC+D,aAAa,CAAC,IAAI,CAAChB,IAAI,EAAEnD,IAAI,CAACK,KAAK,CAAC;;IAE/C,OAAOL,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAO4D,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC/C,OAAO,EAAE,CAAC;EACvC;;AAlIFtC,OAAA,CAAAyE,aAAA,GAAAA,aAAA;AAqIA;AACA,MAAAwB,QAAsB,SAAQtF,QAAQ;EACpC,OAAOC,UAAUA,CAAEe,IAAmB;IACpCA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZ,MAAMsE,OAAO,GAAGvE,IAAI,CAACI,GAAG,CAACoE,YAAY,CAACxE,IAAI,CAACK,KAAK,CAAC;IACjD,MAAMoE,OAAO,GAAG,IAAIH,QAAQ,CAACC,OAAO,CAAC;IACrCvE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;MACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;IAE5C,IAAIuE,KAAK,GAAG1E,IAAI,CAACI,GAAG,CAACuE,WAAW,CAAC3E,IAAI,CAACK,KAAK,CAAC;IAE5C,MAAMuE,UAAU,GAAG5E,IAAI,CAACM,GAAG,GAAG,CAAC,GAAGoE,KAAK;IACvC,MAAMG,EAAE,GAAG,IAAI3G,QAAA,CAAA4G,OAAO,CAACF,UAAU,CAAC;IAClC,OAAOF,KAAK,EAAE,GAAG,CAAC,EAAE;MAClB1E,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C,MAAM4E,GAAG,GAAG/E,IAAI,CAACI,GAAG,CAAC4E,WAAW,CAAChF,IAAI,CAACK,KAAK,CAAC;MAC5CL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ4E,EAAE,CAAC5E,IAAI,CAAC,CAAC,CAAC;MACV,IAAID,IAAI,CAACE,SAAS,EAAE,EAAE;QACpB,MAAM,IAAIlC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C0E,EAAE,CAACvE,GAAG,GAAGsE,UAAU,GAAG5E,IAAI,CAACI,GAAG,CAAC6E,WAAW,CAACjF,IAAI,CAACK,KAAK,CAAC;MACtD,IAAIL,IAAI,CAACkE,MAAM,GAAGW,EAAE,CAACvE,GAAG,EAAE;QACxB,MAAM,IAAItC,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5C,MAAMb,GAAG,GAAGU,IAAI,CAACI,GAAG,CAAC3B,KAAK,CAACoG,EAAE,CAACxE,KAAK,EAAEwE,EAAE,CAACvE,GAAG,CAAC;MAC5CmE,OAAO,CAACS,GAAG,CAACH,GAAG,EAAEzF,GAAG,CAAC;;IAEvBU,IAAI,CAACmF,KAAK,CAACN,EAAE,CAACvE,GAAG,EAAEuE,EAAE,CAACvE,GAAG,CAAC;IAC1B,OAAOmE,OAAO;EAChB;EAIApF,YAAaO,IAAS;IACpB,KAAK,CAACA,IAAI,CAAC;IACX,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACwF,IAAI,GAAG,IAAIC,GAAG,EAAE;EACvB;EAEA1E,OAAOA,CAAA;IACL,MAAMyE,IAAI,GAAQ,EAAE;IACpB,KAAK,MAAM,CAACL,GAAG,EAAE7C,KAAK,CAAC,IAAI,IAAI,CAACkD,IAAI,EAAE;MACpCA,IAAI,CAACE,GAAG,CAACP,GAAG,CAAC,CAAC,GAAG7C,KAAK;;IAExB,OAAO;MACLtC,IAAI,EAAE0F,GAAG,CAAC,IAAI,CAAC1F,IAAI,CAAC;MACpBwF;KACD;EACH;EAEA,IAAIG,IAAIA,CAAA;IACN,OAAO,IAAI,CAACH,IAAI,CAACG,IAAI;EACvB;EAEA,CAACC,MAAM,CAACC,QAAQ,IAAC;IACf,OAAO,IAAI,CAACL,IAAI,CAACI,MAAM,CAACC,QAAQ,CAAC,EAAE;EACrC;EAEAP,GAAGA,CAAEH,GAAQ,EAAEzF,GAAW;IACxB,IAAI,CAAC8F,IAAI,CAACF,GAAG,CAACH,GAAG,EAAEzF,GAAG,CAAC;EACzB;EAEAoG,GAAGA,CAAEX,GAAQ;IACX,OAAO,IAAI,CAACK,IAAI,CAACM,GAAG,CAACX,GAAG,CAAC;EAC3B;EAEAY,GAAGA,CAAEZ,GAAQ;IACX,OAAO,IAAI,CAACK,IAAI,CAACO,GAAG,CAACZ,GAAG,CAAC;EAC3B;EAEAnE,MAAMA,CAAEC,KAAe;IACrB,IAAI,EAAEA,KAAK,YAAYyD,QAAQ,CAAC,EAAE;MAChC,OAAO,KAAK;;IAEd,IAAI,IAAI,CAAC1E,IAAI,KAAKiB,KAAK,CAACjB,IAAI,IAAI,IAAI,CAACwF,IAAI,CAACG,IAAI,KAAK1E,KAAK,CAACuE,IAAI,CAACG,IAAI,EAAE;MAClE,OAAO,KAAK;;IAEd,KAAK,MAAMR,GAAG,IAAI,IAAI,CAACK,IAAI,CAACQ,IAAI,EAAE,EAAE;MAClC,MAAM7D,CAAC,GAAG,IAAI,CAACqD,IAAI,CAACM,GAAG,CAACX,GAAG,CAAC;MAC5B,MAAM/C,CAAC,GAAGnB,KAAK,CAACuE,IAAI,CAACM,GAAG,CAACX,GAAG,CAAC;MAC7B,IAAIhD,CAAC,IAAI,IAAI,IAAIC,CAAC,IAAI,IAAI,IAAI,CAACD,CAAC,CAACnB,MAAM,CAACoB,CAAC,CAAC,EAAE;QAC1C,OAAO,KAAK;;;IAGhB,OAAO,IAAI;EACb;EAEAlB,OAAOA,CAAA;IACL,IAAIA,OAAO,GAAG,CAAC;IACf,KAAK,MAAMV,GAAG,IAAI,IAAI,CAACgF,IAAI,CAACS,MAAM,EAAE,EAAE;MACpC/E,OAAO,IAAI,CAAC,GAAGV,GAAG,CAAC8D,MAAM;;IAE3B,OAAOpD,OAAO;EAChB;EAEAC,OAAOA,CAAEf,IAAmB;IAC1BA,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZD,IAAI,CAACI,GAAG,CAAC0F,aAAa,CAAC,IAAI,CAAClG,IAAI,EAAEI,IAAI,CAACK,KAAK,CAAC;IAC7CL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;IACZ,MAAMsF,IAAI,GAAG,IAAI,CAACH,IAAI,CAACG,IAAI;IAC3BvF,IAAI,CAACI,GAAG,CAAC2F,aAAa,CAACR,IAAI,EAAEvF,IAAI,CAACK,KAAK,CAAC;IACxCL,IAAI,CAACI,GAAG,CAAC2F,aAAa,CAAC,CAAC,EAAE/F,IAAI,CAACK,KAAK,GAAG,CAAC,CAAC;IAEzC,IAAIuE,UAAU,GAAG,CAAC;IAClB,MAAMhG,CAAC,GAAG,IAAIV,QAAA,CAAA4G,OAAO,CAAC9E,IAAI,CAACM,GAAG,GAAG,CAAC,GAAGiF,IAAI,CAAC;IAC1C,MAAMK,IAAI,GAAGI,KAAK,CAACC,IAAI,CAAC,IAAI,CAACb,IAAI,CAACQ,IAAI,EAAE,CAAC;IACzCA,IAAI,CAACM,IAAI,CAAC,CAACnE,CAAC,EAAEC,CAAC,KAAKD,CAAC,GAAGC,CAAC,CAAC;IAC1B,KAAK,MAAM+C,GAAG,IAAIa,IAAI,EAAE;MACtB,MAAMtG,GAAG,GAAG,IAAI,CAAC8F,IAAI,CAACM,GAAG,CAACX,GAAG,CAAC;MAC9B,IAAIzF,GAAG,IAAI,IAAI,EAAE;QACf,MAAM,IAAItB,OAAA,CAAAmC,SAAS,CAAC,qBAAqB,CAAC;;MAE5CH,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZD,IAAI,CAACI,GAAG,CAAC0F,aAAa,CAACf,GAAG,EAAE/E,IAAI,CAACK,KAAK,CAAC;MACvCL,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACZ2E,UAAU,IAAItF,GAAG,CAAC4E,MAAM;MACxBlE,IAAI,CAACI,GAAG,CAAC+F,aAAa,CAACvB,UAAU,EAAE5E,IAAI,CAACK,KAAK,CAAC;MAC9CzB,CAAC,CAACqB,IAAI,CAACX,GAAG,CAAC4E,MAAM,CAAC;MAClB5E,GAAG,CAAC8G,IAAI,CAACpG,IAAI,CAACI,GAAG,EAAExB,CAAC,CAACyB,KAAK,EAAE,CAAC,EAAEf,GAAG,CAAC4E,MAAM,CAAC;;IAE5ClE,IAAI,CAACmF,KAAK,CAACvG,CAAC,CAAC0B,GAAG,EAAE1B,CAAC,CAAC0B,GAAG,CAAC;IACxB,OAAON,IAAI;EACb;EAEAH,QAAQA,CAAA;IACN,OAAO4D,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC/C,OAAO,EAAE,CAAC;EACvC;;AAlIFtC,OAAA,CAAAiG,QAAA,GAAAA,QAAA;AAqIA,IAAYgB,GA2LX;AA3LD,WAAYA,GAAG;EACbA,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,UAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAASe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClCf,GAAA,CAAAA,GAAA,WAASe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAASe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAASe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClCf,GAAA,CAAAA,GAAA,WAASe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAClCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChC;EACA;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACA;EACA;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACA;EACA;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,UAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,UAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,UAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAChCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EACAf,GAAA,CAAAA,GAAA,UAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EAEpC;EACAf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEhC;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAf,GAAA,CAAAA,GAAA,UAAMe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACnCf,GAAA,CAAAA,GAAA,UAAMe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,CAAC;EACnCf,GAAA,CAAAA,GAAA,UAAMe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,CAAC;EACpCf,GAAA,CAAAA,GAAA,WAAOe,KAAK,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAClC,CAAC,EA3LWf,GAAG,GAAHjH,OAAA,CAAAiH,GAAG,KAAHjH,OAAA,CAAAiH,GAAG;AA6Lf,SAAAe,MAAgBtE,CAAS,EAAEC,CAAS,EAAEsE,CAAS,EAAEC,CAAS;EACxD,OAAOxE,CAAC,CAACyE,UAAU,CAAC,CAAC,CAAC,IAAI,QAAQ,GAAG,CAAC,CAAC,GAAGxE,CAAC,CAACwE,UAAU,CAAC,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,CAAC,GACtEF,CAAC,CAACE,UAAU,CAAC,CAAC,CAAC,IAAI,IAAI,GAAG,CAAC,CAAC,GAAGD,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC;AAClD;AAEA,SAAAhD,UAAoBR,OAAoB;EACtC,OAAOA,OAAO,IAAI,IAAI,IAAIA,OAAO,CAACG,IAAI,IAAI,CAAC,IAAI7B,MAAM,CAACC,SAAS,CAACyB,OAAO,CAACG,IAAI,CAAC,IAC3E,OAAOH,OAAO,CAACA,OAAO,KAAK,QAAQ,KAClCA,OAAO,CAACC,MAAM,KAAK3E,UAAU,CAAC4E,IAAI,IAAIF,OAAO,CAACC,MAAM,KAAK3E,UAAU,CAACiF,IAAI,CAAC;AAC9E"},"metadata":{},"sourceType":"script","externalDependencies":[]}